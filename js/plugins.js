// Generated by RPG Maker.
// Do not edit this file directly.
var $plugins =
[
{"name":"--------------------","status":false,"description":"","parameters":{}},
{"name":"YEP_CoreEngine","status":true,"description":"v1.31 Needed for the majority of Yanfly Engine Scripts. Also\ncontains bug fixes found inherently in RPG Maker.","parameters":{"---Screen---":"","Screen Width":"1280","Screen Height":"720","Scale Battlebacks":"true","Scale Title":"true","Scale Game Over":"true","Open Console":"false","Reposition Battlers":"true","GameFont Load Timer":"0","Update Real Scale":"false","Collection Clear":"true","---Gold---":"","Gold Max":"99999999","Gold Font Size":"20","Gold Icon":"313","Gold Overlap":"A lotta","---Items---":"","Default Max":"999","Quantity Text Size":"20","---Parameters---":"","Max Level":"99","Actor MaxHP":"9999","Actor MaxMP":"9999","Actor Parameter":"999","Enemy MaxHP":"999999","Enemy MaxMP":"9999","Enemy Parameter":"999","---Battle---":"","Animation Rate":"4","Flash Target":"false","Show Events Transition":"true","Show Events Snapshot":"true","---Map Optimization---":"","Refresh Update HP":"true","Refresh Update MP":"true","Refresh Update TP":"false","---Font---":"","Chinese Font":"SimHei, Heiti TC, sans-serif","Korean Font":"Dotum, AppleGothic, sans-serif","Default Font":"GameFont, Verdana, Arial, Courier New","Font Size":"28","Text Align":"left","---Windows---":"","Digit Grouping":"true","Line Height":"36","Icon Width":"32","Icon Height":"32","Face Width":"144","Face Height":"144","Window Padding":"18","Text Padding":"6","Window Opacity":"192","Gauge Outline":"true","Gauge Height":"18","Menu TP Bar":"true","---Window Colors---":"","Color: Normal":"0","Color: System":"16","Color: Crisis":"17","Color: Death":"18","Color: Gauge Back":"19","Color: HP Gauge 1":"20","Color: HP Gauge 2":"21","Color: MP Gauge 1":"22","Color: MP Gauge 2":"23","Color: MP Cost":"23","Color: Power Up":"24","Color: Power Down":"25","Color: TP Gauge 1":"28","Color: TP Gauge 2":"29","Color: TP Cost Color":"29"}},
{"name":"YEP_X_CoreUpdatesOpt","status":true,"description":"v1.62 (Req YEP_CoreEngine.js) Update your game without needing\nto change your base rpg_x.js files and optimize it for desktop.","parameters":{"---Official Updates---":"","110_Updates":"true","120_Updates":"true","130_Updates":"true","131_Updates":"true","132_Updates":"true","133_Updates":"true","134_Updates":"true","140_Updates":"true","150_Updates":"true","151_Updates":"true","152_Updates":"true","162_Updates":"true","---Custom---":"","Desktop_Updates":"true"}},
{"name":"YEP_MessageCore","status":true,"description":"v1.19 Adds more features to the Message Window to customized\nthe way your messages appear and functions.","parameters":{"---General---":"","Default Rows":"4","Default Width":"816","Face Indent":"Window_Base._faceWidth + 24","Fast Forward Key":"pagedown","Enable Fast Forward":"false","Word Wrapping":"false","Description Wrap":"false","Word Wrap Space":"false","Tight Wrap":"false","---Font---":"","Font Name":"Arial, GameFont","Font Name CH":"SimHei, Heiti TC, sans-serif","Font Name KR":"Dotum, AppleGothic, sans-serif","Font Size":"28","Font Size Change":"12","Font Changed Max":"96","Font Changed Min":"12","Font Outline":"4","Maintain Font":"false","---Name Box---":"","Name Box Buffer X":"-28","Name Box Buffer Y":"0","Name Box Padding":"this.standardPadding() * 4","Name Box Color":"0","Name Box Clear":"false","Name Box Added Text":"\\c[6]","Name Box Auto Close":"false"}},
{"name":"YEP_X_ExtMesPack1","status":true,"description":"v1.12 (Requires YEP_MessageCore.js) Letter Sounds, NameBox\nBackground Types, Choice Control, and more!","parameters":{"---Letter Sounds---":"","Enable Sound":"false","Sound Name":"Cursor1","Sound Volume":"50","Sound Pitch":"100","Pitch Variance":"10","Sound Pan":"0","Pan Variance":"10","Sound Interval":"2","Reset Sounds":"false","---Message Anchor---":"","Default X":"center","Default Y":"bottom","Auto Row Full Face":"false","---Message Choices---":"","Max Rows":"6","Choice 1 Show Switch":"0","Choice 2 Show Switch":"0","Choice 3 Show Switch":"0","Choice 4 Show Switch":"0","Choice 5 Show Switch":"0","Choice 6 Show Switch":"0","Choice 7 Show Switch":"0","Choice 8 Show Switch":"0","Choice 9 Show Switch":"0","Choice 10 Show Switch":"0","Choice 11 Show Switch":"0","Choice 12 Show Switch":"0","Choice 13 Show Switch":"0","Choice 14 Show Switch":"0","Choice 15 Show Switch":"0","Choice 16 Show Switch":"0","Choice 17 Show Switch":"0","Choice 18 Show Switch":"0","Choice 19 Show Switch":"0","Choice 20 Show Switch":"0","Choice 1 On Switch":"0","Choice 2 On Switch":"0","Choice 3 On Switch":"0","Choice 4 On Switch":"0","Choice 5 On Switch":"0","Choice 6 On Switch":"0","Choice 7 On Switch":"0","Choice 8 On Switch":"0","Choice 9 On Switch":"0","Choice 10 On Switch":"0","Choice 11 On Switch":"0","Choice 12 On Switch":"0","Choice 13 On Switch":"0","Choice 14 On Switch":"0","Choice 15 On Switch":"0","Choice 16 On Switch":"0","Choice 17 On Switch":"0","Choice 18 On Switch":"0","Choice 19 On Switch":"0","Choice 20 On Switch":"0"}},
{"name":"YEP_X_ExtMesPack2","status":true,"description":"v1.00 (Requires YEP_MessageCore.js) Adds text codes to display\nvarious game data information for messages.","parameters":{"---Quantity Text Codes---":"","TextCode QI":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar item = $dataItems[x];\\nif (Imported.YEP_ItemCore && DataManager.isIndependent(item)) {\\n  var quantity = $gameParty.numIndependentItems(item);\\n} else {\\n  var quantity = $gameParty.numItems(item);\\n}\\ntext = this.groupDigits(quantity);\"","TextCode QW":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar weapon = $dataWeapons[x];\\nif (Imported.YEP_ItemCore && DataManager.isIndependent(weapon)) {\\n  var quantity = $gameParty.numIndependentItems(weapon);\\n} else {\\n  var quantity = $gameParty.numItems(weapon);\\n}\\ntext = this.groupDigits(quantity);\"","TextCode QA":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar armor = $dataArmors[x];\\nif (Imported.YEP_ItemCore && DataManager.isIndependent(armor)) {\\n  var quantity = $gameParty.numIndependentItems(armor);\\n} else {\\n  var quantity = $gameParty.numItems(armor);\\n}\\ntext = this.groupDigits(quantity);\"","---Compare Text Codes---":"","TextCode Compare":"\"// Variables:\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\nif (x >= y) {\\n  var colorId = 24;\\n} else if (x < y) {\\n  var colorId = 25;\\n}\\ntext = '\\\\x1bc[' + colorId + ']';\"","TextCode Compare1":"\"// Variables:\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\nif (x >= y) {\\n  var colorId = 2;\\n} else if (x < y) {\\n  var colorId = 0;\\n}\\ntext = '\\\\x1bc[' + colorId + ']';\"","TextCode Compare2":"\"// Variables:\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\nif (x >= y) {\\n  var colorId = 14;\\n} else if (x < y) {\\n  var colorId = 0;\\n}\\ntext = '\\\\x1bc[' + colorId + ']';\"","TextCode Compare3":"\"// Variables:\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\nif (x >= y) {\\n  var colorId = 3;\\n} else if (x < y) {\\n  var colorId = 0;\\n}\\ntext = '\\\\x1bc[' + colorId + ']';\"","TextCode Compare4":"\"// Variables:\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\nif (x >= y) {\\n  var colorId = 4;\\n} else if (x < y) {\\n  var colorId = 0;\\n}\\ntext = '\\\\x1bc[' + colorId + ']';\"","TextCode Compare5":"\"// Variables:\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\nif (x >= y) {\\n  var colorId = 0;\\n} else if (x < y) {\\n  var colorId = 7;\\n}\\ntext = '\\\\x1bc[' + colorId + ']';\"","TextCode Compare6":"\"// Variables:\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\nif (x >= y) {\\n  var colorId = 0;\\n} else if (x < y) {\\n  var colorId = 25;\\n}\\ntext = '\\\\x1bc[' + colorId + ']';\"","TextCode Compare7":"\"// Variables:\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\nif (x >= y) {\\n  var colorId = 0;\\n} else if (x < y) {\\n  var colorId = 13;\\n}\\ntext = '\\\\x1bc[' + colorId + ']';\"","TextCode Compare8":"\"// Variables:\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\nif (x >= y) {\\n  var colorId = 0;\\n} else if (x < y) {\\n  var colorId = 9;\\n}\\ntext = '\\\\x1bc[' + colorId + ']';\"","TextCode Compare9":"\"// Variables:\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\nif (x >= y) {\\n  var colorId = 0;\\n} else if (x < y) {\\n  var colorId = 20;\\n}\\ntext = '\\\\x1bc[' + colorId + ']';\"","---Case Text Codes---":"","TextCode CaseSwitch":"\"// Variables:\\n//   s - The switch ID (number) to be checked.\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\ntext = (s) ? x : y;\"","TextCode CaseEval":"\"// Variables:\\n//   e - The eval code to be checked.\\n//   x - The 1st value inserted into the text code.\\n//   y - The 2nd value inserted into the text code.\\n//   text - The text to be returned.\\n\\ntext = (e) ? x : y;\"","---Actor Param Codes---":"","---Actor Params---":"","TextCode ALvl":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.level;\\ntext = this.groupDigits(value);\"","TextCode AMhp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mhp;\\ntext = this.groupDigits(value);\"","TextCode AHp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.hp;\\ntext = this.groupDigits(value);\"","TextCode AHp%":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.hpRate();\\ntext = Math.floor(value * 100) + '%';\"","TextCode AMmp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mmp;\\ntext = this.groupDigits(value);\"","TextCode AMp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mp;\\ntext = this.groupDigits(value);\"","TextCode AMp%":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mpRate();\\ntext = Math.floor(value * 100) + '%';\"","TextCode AMtp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.maxTp();\\ntext = this.groupDigits(value);\"","TextCode ATp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.tp;\\ntext = this.groupDigits(value);\"","TextCode ATp%":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.tpRate();\\ntext = Math.floor(value * 100) + '%';\"","TextCode AAtk":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.atk;\\ntext = this.groupDigits(value);\"","TextCode ADef":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.def;\\ntext = this.groupDigits(value);\"","TextCode AMat":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mat;\\ntext = this.groupDigits(value);\"","TextCode AMdf":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mdf;\\ntext = this.groupDigits(value);\"","TextCode AAgi":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.agi;\\ntext = this.groupDigits(value);\"","TextCode ALuk":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.luk;\\ntext = this.groupDigits(value);\"","---Actor XParams---":"","TextCode AHit":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.hit;\\ntext = Math.floor(value * 100) + '%';\"","TextCode AEva":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.eva;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ACri":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.cri;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ACev":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.cev;\\ntext = Math.floor(value * 100) + '%';\"","TextCode AMev":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mev;\\ntext = Math.floor(value * 100) + '%';\"","TextCode AMrf":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mrf;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ACnt":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.cnt;\\ntext = Math.floor(value * 100) + '%';\"","TextCode AHrg":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.hrg;\\ntext = Math.floor(value * 100) + '%';\"","TextCode AMrg":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mrg;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ATrg":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.trg;\\ntext = Math.floor(value * 100) + '%';\"","---Actor SParams---":"","TextCode ATgr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.tgr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode AGrd":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.grd;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ARec":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.rec;\\ntext = Math.floor(value * 100) + '%';\"","TextCode APha":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.pha;\\ntext = Math.floor(value * 100) + '%';\"","TextCode AMcr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mcr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ATcr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.tcr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode APdr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.pdr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode AMdr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.mdr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode AFdr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.fdr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode AExr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar actor = $gameActors.actor(x);\\nvar value = actor.exr;\\ntext = Math.floor(value * 100) + '%';\"","---Enemy Param Codes---":"","---Enemy Params---":"","TextCode ELvl":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nif (Imported.YEP_EnemyLevels) {\\n  var enemy = $gameTroop.members()[x];\\n  var value = enemy.level;\\n  text = this.groupDigits(value);\\n} else {\\n  text = $gameParty.highestLevel();\\n}\"","TextCode EMhp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mhp;\\ntext = this.groupDigits(value);\"","TextCode EHp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.hp;\\ntext = this.groupDigits(value);\"","TextCode EHp%":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.hpRate();\\ntext = Math.floor(value * 100) + '%';\"","TextCode EMmp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mmp;\\ntext = this.groupDigits(value);\"","TextCode EMp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mp;\\ntext = this.groupDigits(value);\"","TextCode EMp%":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mpRate();\\ntext = Math.floor(value * 100) + '%';\"","TextCode EMtp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.maxTp();\\ntext = this.groupDigits(value);\"","TextCode ETp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.tp;\\ntext = this.groupDigits(value);\"","TextCode ETp%":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.tpRate();\\ntext = Math.floor(value * 100) + '%';\"","TextCode EAtk":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.atk;\\ntext = this.groupDigits(value);\"","TextCode EDef":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.def;\\ntext = this.groupDigits(value);\"","TextCode EMat":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mat;\\ntext = this.groupDigits(value);\"","TextCode EMdf":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mdf;\\ntext = this.groupDigits(value);\"","TextCode EAgi":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.agi;\\ntext = this.groupDigits(value);\"","TextCode ELuk":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.luk;\\ntext = this.groupDigits(value);\"","TextCode EExp":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.exp();\\ntext = this.groupDigits(value);\"","TextCode EGold":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.gold();\\ntext = this.groupDigits(value);\"","---Enemy XParams---":"","TextCode EHit":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.hit;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EEva":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.eva;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ECri":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.cri;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ECev":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.cev;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EMev":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mev;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EMrf":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mrf;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ECnt":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.cnt;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EHrg":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.hrg;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EMrg":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mrg;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ETrg":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.trg;\\ntext = Math.floor(value * 100) + '%';\"","---Enemy SParams---":"","TextCode ETgr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.tgr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EGrd":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.grd;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ERec":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.rec;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EPha":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.pha;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EMcr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mcr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode ETcr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.tcr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EPdr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.pdr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EMdr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.mdr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EFdr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.fdr;\\ntext = Math.floor(value * 100) + '%';\"","TextCode EExr":"\"// Variables:\\n//   x - The value inserted into the text code.\\n//   text - The string to be shown in the message window.\\n\\nvar enemy = $gameTroop.members()[x];\\nvar value = enemy.exr;\\ntext = Math.floor(value * 100) + '%';\""}},
{"name":"YEP_MainMenuManager","status":true,"description":"v1.03 This plugin allows you to manage the various aspects\nof your main menu.","parameters":{"---General---":"","Hide Actor Window":"false","Hide Gold Window":"false","Blurry Background":"true","---Command---":"","Command Alignment":"left","Command Position":"left","Command Columns":"1","Command Rows":"Math.min(10, Math.ceil(this.maxItems() / this.maxCols()))","Command Width":"240","---Menu Items---":"","---Menu 1---":"","Menu 1 Name":"","Menu 1 Symbol":"","Menu 1 Show":"","Menu 1 Enabled":"","Menu 1 Ext":"","Menu 1 Main Bind":"","Menu 1 Actor Bind":"","---Menu 2---":"","Menu 2 Name":"","Menu 2 Symbol":"","Menu 2 Show":"","Menu 2 Enabled":"","Menu 2 Ext":"","Menu 2 Main Bind":"","Menu 2 Actor Bind":"","---Menu 3---":"","Menu 3 Name":"","Menu 3 Symbol":"","Menu 3 Show":"","Menu 3 Enabled":"","Menu 3 Ext":"","Menu 3 Main Bind":"","Menu 3 Actor Bind":"","---Menu 4---":"","Menu 4 Name":"","Menu 4 Symbol":"","Menu 4 Show":"","Menu 4 Enabled":"","Menu 4 Ext":"","Menu 4 Main Bind":"","Menu 4 Actor Bind":"","---Menu 5---":"","Menu 5 Name":"","Menu 5 Symbol":"","Menu 5 Show":"","Menu 5 Enabled":"","Menu 5 Ext":"","Menu 5 Main Bind":"","Menu 5 Actor Bind":"","---Menu 6---":"","Menu 6 Name":"","Menu 6 Symbol":"","Menu 6 Show":"","Menu 6 Enabled":"","Menu 6 Ext":"","Menu 6 Main Bind":"","Menu 6 Actor Bind":"","---Menu 7---":"","Menu 7 Name":"","Menu 7 Symbol":"","Menu 7 Show":"","Menu 7 Enabled":"","Menu 7 Ext":"","Menu 7 Main Bind":"","Menu 7 Actor Bind":"","---Menu 8---":"","Menu 8 Name":"","Menu 8 Symbol":"","Menu 8 Show":"","Menu 8 Enabled":"","Menu 8 Ext":"","Menu 8 Main Bind":"","Menu 8 Actor Bind":"","---Menu 9---":"","Menu 9 Name":"","Menu 9 Symbol":"","Menu 9 Show":"","Menu 9 Enabled":"","Menu 9 Ext":"","Menu 9 Main Bind":"","Menu 9 Actor Bind":"","---Menu 10---":"","Menu 10 Name":"'背包'","Menu 10 Symbol":"item","Menu 10 Show":"this.needsCommand('item')","Menu 10 Enabled":"this.areMainCommandsEnabled()","Menu 10 Ext":"","Menu 10 Main Bind":"this.commandItem.bind(this)","Menu 10 Actor Bind":"","---Menu 11---":"","Menu 11 Name":"'卡组编辑器'","Menu 11 Symbol":"cardGameDeckBuilder","Menu 11 Show":"$gameSystem.isCardGameDeckBuilderVisible()","Menu 11 Enabled":"$gameSystem.isCardGameDeckBuilderEnabled()","Menu 11 Ext":"","Menu 11 Main Bind":"this.commandCardGameDeckBuilder.bind(this)","Menu 11 Actor Bind":"","---Menu 12---":"","Menu 12 Name":"","Menu 12 Symbol":"","Menu 12 Show":"","Menu 12 Enabled":"","Menu 12 Ext":"","Menu 12 Main Bind":"","Menu 12 Actor Bind":"","---Menu 13---":"","Menu 13 Name":"","Menu 13 Symbol":"","Menu 13 Show":"","Menu 13 Enabled":"","Menu 13 Ext":"","Menu 13 Main Bind":"","Menu 13 Actor Bind":"","---Menu 14---":"","Menu 14 Name":"","Menu 14 Symbol":"","Menu 14 Show":"","Menu 14 Enabled":"","Menu 14 Ext":"","Menu 14 Main Bind":"","Menu 14 Actor Bind":"","---Menu 15---":"","Menu 15 Name":"TextManager.skill","Menu 15 Symbol":"skill","Menu 15 Show":"this.needsCommand('skill')","Menu 15 Enabled":"this.areMainCommandsEnabled()","Menu 15 Ext":"","Menu 15 Main Bind":"this.commandPersonal.bind(this)","Menu 15 Actor Bind":"SceneManager.push(Scene_Skill)","---Menu 16---":"","Menu 16 Name":"","Menu 16 Symbol":"","Menu 16 Show":"","Menu 16 Enabled":"","Menu 16 Ext":"","Menu 16 Main Bind":"","Menu 16 Actor Bind":"","---Menu 17---":"","Menu 17 Name":"","Menu 17 Symbol":"","Menu 17 Show":"","Menu 17 Enabled":"","Menu 17 Ext":"","Menu 17 Main Bind":"","Menu 17 Actor Bind":"","---Menu 18---":"","Menu 18 Name":"","Menu 18 Symbol":"","Menu 18 Show":"","Menu 18 Enabled":"","Menu 18 Ext":"","Menu 18 Main Bind":"","Menu 18 Actor Bind":"","---Menu 19---":"","Menu 19 Name":"","Menu 19 Symbol":"","Menu 19 Show":"","Menu 19 Enabled":"","Menu 19 Ext":"","Menu 19 Main Bind":"","Menu 19 Actor Bind":"","---Menu 20---":"","Menu 20 Name":"TextManager.equip","Menu 20 Symbol":"equip","Menu 20 Show":"this.needsCommand('equip')","Menu 20 Enabled":"this.areMainCommandsEnabled()","Menu 20 Ext":"","Menu 20 Main Bind":"this.commandPersonal.bind(this)","Menu 20 Actor Bind":"SceneManager.push(Scene_Equip)","---Menu 21---":"","Menu 21 Name":"","Menu 21 Symbol":"","Menu 21 Show":"","Menu 21 Enabled":"","Menu 21 Ext":"","Menu 21 Main Bind":"","Menu 21 Actor Bind":"","---Menu 22---":"","Menu 22 Name":"","Menu 22 Symbol":"","Menu 22 Show":"","Menu 22 Enabled":"","Menu 22 Ext":"","Menu 22 Main Bind":"","Menu 22 Actor Bind":"","---Menu 23---":"","Menu 23 Name":"","Menu 23 Symbol":"","Menu 23 Show":"","Menu 23 Enabled":"","Menu 23 Ext":"","Menu 23 Main Bind":"","Menu 23 Actor Bind":"","---Menu 24---":"","Menu 24 Name":"","Menu 24 Symbol":"","Menu 24 Show":"","Menu 24 Enabled":"","Menu 24 Ext":"","Menu 24 Main Bind":"","Menu 24 Actor Bind":"","---Menu 25---":"","Menu 25 Name":"Yanfly.Param.CCCCmdName","Menu 25 Symbol":"class","Menu 25 Show":"Imported.YEP_ClassChangeCore && $gameSystem.isShowClass()","Menu 25 Enabled":"$gameSystem.isEnableClass() && this.areMainCommandsEnabled()","Menu 25 Ext":"","Menu 25 Main Bind":"this.commandPersonal.bind(this)","Menu 25 Actor Bind":"SceneManager.push(Scene_Class)","---Menu 26---":"","Menu 26 Name":"","Menu 26 Symbol":"","Menu 26 Show":"","Menu 26 Enabled":"","Menu 26 Ext":"","Menu 26 Main Bind":"","Menu 26 Actor Bind":"","---Menu 27---":"","Menu 27 Name":"","Menu 27 Symbol":"","Menu 27 Show":"","Menu 27 Enabled":"","Menu 27 Ext":"","Menu 27 Main Bind":"","Menu 27 Actor Bind":"","---Menu 28---":"","Menu 28 Name":"","Menu 28 Symbol":"","Menu 28 Show":"","Menu 28 Enabled":"","Menu 28 Ext":"","Menu 28 Main Bind":"","Menu 28 Actor Bind":"","---Menu 29---":"","Menu 29 Name":"","Menu 29 Symbol":"","Menu 29 Show":"","Menu 29 Enabled":"","Menu 29 Ext":"","Menu 29 Main Bind":"","Menu 29 Actor Bind":"","---Menu 30---":"","Menu 30 Name":"","Menu 30 Symbol":"","Menu 30 Show":"","Menu 30 Enabled":"","Menu 30 Ext":"","Menu 30 Main Bind":"","Menu 30 Actor Bind":"","---Menu 31---":"","Menu 31 Name":"","Menu 31 Symbol":"","Menu 31 Show":"","Menu 31 Enabled":"","Menu 31 Ext":"","Menu 31 Main Bind":"","Menu 31 Actor Bind":"","---Menu 32---":"","Menu 32 Name":"","Menu 32 Symbol":"","Menu 32 Show":"","Menu 32 Enabled":"","Menu 32 Ext":"","Menu 32 Main Bind":"","Menu 32 Actor Bind":"","---Menu 33---":"","Menu 33 Name":"","Menu 33 Symbol":"","Menu 33 Show":"","Menu 33 Enabled":"","Menu 33 Ext":"","Menu 33 Main Bind":"","Menu 33 Actor Bind":"","---Menu 34---":"","Menu 34 Name":"","Menu 34 Symbol":"","Menu 34 Show":"","Menu 34 Enabled":"","Menu 34 Ext":"","Menu 34 Main Bind":"","Menu 34 Actor Bind":"","---Menu 35---":"","Menu 35 Name":"","Menu 35 Symbol":"","Menu 35 Show":"","Menu 35 Enabled":"","Menu 35 Ext":"","Menu 35 Main Bind":"","Menu 35 Actor Bind":"","---Menu 36---":"","Menu 36 Name":"","Menu 36 Symbol":"","Menu 36 Show":"","Menu 36 Enabled":"","Menu 36 Ext":"","Menu 36 Main Bind":"","Menu 36 Actor Bind":"","---Menu 37---":"","Menu 37 Name":"","Menu 37 Symbol":"","Menu 37 Show":"","Menu 37 Enabled":"","Menu 37 Ext":"","Menu 37 Main Bind":"","Menu 37 Actor Bind":"","---Menu 38---":"","Menu 38 Name":"","Menu 38 Symbol":"","Menu 38 Show":"","Menu 38 Enabled":"","Menu 38 Ext":"","Menu 38 Main Bind":"","Menu 38 Actor Bind":"","---Menu 39---":"","Menu 39 Name":"","Menu 39 Symbol":"","Menu 39 Show":"","Menu 39 Enabled":"","Menu 39 Ext":"","Menu 39 Main Bind":"","Menu 39 Actor Bind":"","---Menu 40---":"","Menu 40 Name":"","Menu 40 Symbol":"","Menu 40 Show":"","Menu 40 Enabled":"","Menu 40 Ext":"","Menu 40 Main Bind":"","Menu 40 Actor Bind":"","---Menu 41---":"","Menu 41 Name":"","Menu 41 Symbol":"","Menu 41 Show":"","Menu 41 Enabled":"","Menu 41 Ext":"","Menu 41 Main Bind":"","Menu 41 Actor Bind":"","---Menu 42---":"","Menu 42 Name":"","Menu 42 Symbol":"","Menu 42 Show":"","Menu 42 Enabled":"","Menu 42 Ext":"","Menu 42 Main Bind":"","Menu 42 Actor Bind":"","---Menu 43---":"","Menu 43 Name":"","Menu 43 Symbol":"","Menu 43 Show":"","Menu 43 Enabled":"","Menu 43 Ext":"","Menu 43 Main Bind":"","Menu 43 Actor Bind":"","---Menu 44---":"","Menu 44 Name":"","Menu 44 Symbol":"","Menu 44 Show":"","Menu 44 Enabled":"","Menu 44 Ext":"","Menu 44 Main Bind":"","Menu 44 Actor Bind":"","---Menu 45---":"","Menu 45 Name":"","Menu 45 Symbol":"","Menu 45 Show":"","Menu 45 Enabled":"","Menu 45 Ext":"","Menu 45 Main Bind":"","Menu 45 Actor Bind":"","---Menu 46---":"","Menu 46 Name":"","Menu 46 Symbol":"","Menu 46 Show":"","Menu 46 Enabled":"","Menu 46 Ext":"","Menu 46 Main Bind":"","Menu 46 Actor Bind":"","---Menu 47---":"","Menu 47 Name":"","Menu 47 Symbol":"","Menu 47 Show":"","Menu 47 Enabled":"","Menu 47 Ext":"","Menu 47 Main Bind":"","Menu 47 Actor Bind":"","---Menu 48---":"","Menu 48 Name":"","Menu 48 Symbol":"","Menu 48 Show":"","Menu 48 Enabled":"","Menu 48 Ext":"","Menu 48 Main Bind":"","Menu 48 Actor Bind":"","---Menu 49---":"","Menu 49 Name":"","Menu 49 Symbol":"","Menu 49 Show":"","Menu 49 Enabled":"","Menu 49 Ext":"","Menu 49 Main Bind":"","Menu 49 Actor Bind":"","---Menu 50---":"","Menu 50 Name":"TextManager.status","Menu 50 Symbol":"status","Menu 50 Show":"this.needsCommand('status')","Menu 50 Enabled":"this.areMainCommandsEnabled()","Menu 50 Ext":"","Menu 50 Main Bind":"this.commandPersonal.bind(this)","Menu 50 Actor Bind":"SceneManager.push(Scene_Status)","---Menu 51---":"","Menu 51 Name":"","Menu 51 Symbol":"","Menu 51 Show":"","Menu 51 Enabled":"","Menu 51 Ext":"","Menu 51 Main Bind":"","Menu 51 Actor Bind":"","---Menu 52---":"","Menu 52 Name":"","Menu 52 Symbol":"","Menu 52 Show":"","Menu 52 Enabled":"","Menu 52 Ext":"","Menu 52 Main Bind":"","Menu 52 Actor Bind":"","---Menu 53---":"","Menu 53 Name":"","Menu 53 Symbol":"","Menu 53 Show":"","Menu 53 Enabled":"","Menu 53 Ext":"","Menu 53 Main Bind":"","Menu 53 Actor Bind":"","---Menu 54---":"","Menu 54 Name":"","Menu 54 Symbol":"","Menu 54 Show":"","Menu 54 Enabled":"","Menu 54 Ext":"","Menu 54 Main Bind":"","Menu 54 Actor Bind":"","---Menu 55---":"","Menu 55 Name":"TextManager.formation","Menu 55 Symbol":"formation","Menu 55 Show":"this.needsCommand('formation')","Menu 55 Enabled":"this.isFormationEnabled()","Menu 55 Ext":"","Menu 55 Main Bind":"this.commandFormation.bind(this)","Menu 55 Actor Bind":"","---Menu 56---":"","Menu 56 Name":"","Menu 56 Symbol":"","Menu 56 Show":"","Menu 56 Enabled":"","Menu 56 Ext":"","Menu 56 Main Bind":"","Menu 56 Actor Bind":"","---Menu 57---":"","Menu 57 Name":"","Menu 57 Symbol":"","Menu 57 Show":"","Menu 57 Enabled":"","Menu 57 Ext":"","Menu 57 Main Bind":"","Menu 57 Actor Bind":"","---Menu 58---":"","Menu 58 Name":"","Menu 58 Symbol":"","Menu 58 Show":"","Menu 58 Enabled":"","Menu 58 Ext":"","Menu 58 Main Bind":"","Menu 58 Actor Bind":"","---Menu 59---":"","Menu 59 Name":"","Menu 59 Symbol":"","Menu 59 Show":"","Menu 59 Enabled":"","Menu 59 Ext":"","Menu 59 Main Bind":"","Menu 59 Actor Bind":"","---Menu 60---":"","Menu 60 Name":"","Menu 60 Symbol":"","Menu 60 Show":"","Menu 60 Enabled":"","Menu 60 Ext":"","Menu 60 Main Bind":"","Menu 60 Actor Bind":"","---Menu 61---":"","Menu 61 Name":"","Menu 61 Symbol":"","Menu 61 Show":"","Menu 61 Enabled":"","Menu 61 Ext":"","Menu 61 Main Bind":"","Menu 61 Actor Bind":"","---Menu 62---":"","Menu 62 Name":"","Menu 62 Symbol":"","Menu 62 Show":"","Menu 62 Enabled":"","Menu 62 Ext":"","Menu 62 Main Bind":"","Menu 62 Actor Bind":"","---Menu 63---":"","Menu 63 Name":"","Menu 63 Symbol":"","Menu 63 Show":"","Menu 63 Enabled":"","Menu 63 Ext":"","Menu 63 Main Bind":"","Menu 63 Actor Bind":"","---Menu 64---":"","Menu 64 Name":"","Menu 64 Symbol":"","Menu 64 Show":"","Menu 64 Enabled":"","Menu 64 Ext":"","Menu 64 Main Bind":"","Menu 64 Actor Bind":"","---Menu 65---":"","Menu 65 Name":"","Menu 65 Symbol":"","Menu 65 Show":"","Menu 65 Enabled":"","Menu 65 Ext":"","Menu 65 Main Bind":"","Menu 65 Actor Bind":"","---Menu 66---":"","Menu 66 Name":"","Menu 66 Symbol":"","Menu 66 Show":"","Menu 66 Enabled":"","Menu 66 Ext":"","Menu 66 Main Bind":"","Menu 66 Actor Bind":"","---Menu 67---":"","Menu 67 Name":"","Menu 67 Symbol":"","Menu 67 Show":"","Menu 67 Enabled":"","Menu 67 Ext":"","Menu 67 Main Bind":"","Menu 67 Actor Bind":"","---Menu 68---":"","Menu 68 Name":"","Menu 68 Symbol":"","Menu 68 Show":"","Menu 68 Enabled":"","Menu 68 Ext":"","Menu 68 Main Bind":"","Menu 68 Actor Bind":"","---Menu 69---":"","Menu 69 Name":"","Menu 69 Symbol":"","Menu 69 Show":"","Menu 69 Enabled":"","Menu 69 Ext":"","Menu 69 Main Bind":"","Menu 69 Actor Bind":"","---Menu 70---":"","Menu 70 Name":"","Menu 70 Symbol":"","Menu 70 Show":"","Menu 70 Enabled":"","Menu 70 Ext":"","Menu 70 Main Bind":"","Menu 70 Actor Bind":"","---Menu 71---":"","Menu 71 Name":"","Menu 71 Symbol":"","Menu 71 Show":"","Menu 71 Enabled":"","Menu 71 Ext":"","Menu 71 Main Bind":"","Menu 71 Actor Bind":"","---Menu 72---":"","Menu 72 Name":"","Menu 72 Symbol":"","Menu 72 Show":"","Menu 72 Enabled":"","Menu 72 Ext":"","Menu 72 Main Bind":"","Menu 72 Actor Bind":"","---Menu 73---":"","Menu 73 Name":"","Menu 73 Symbol":"","Menu 73 Show":"","Menu 73 Enabled":"","Menu 73 Ext":"","Menu 73 Main Bind":"","Menu 73 Actor Bind":"","---Menu 74---":"","Menu 74 Name":"","Menu 74 Symbol":"","Menu 74 Show":"","Menu 74 Enabled":"","Menu 74 Ext":"","Menu 74 Main Bind":"","Menu 74 Actor Bind":"","---Menu 75---":"","Menu 75 Name":"","Menu 75 Symbol":"","Menu 75 Show":"","Menu 75 Enabled":"","Menu 75 Ext":"","Menu 75 Main Bind":"","Menu 75 Actor Bind":"","---Menu 76---":"","Menu 76 Name":"","Menu 76 Symbol":"","Menu 76 Show":"","Menu 76 Enabled":"","Menu 76 Ext":"","Menu 76 Main Bind":"","Menu 76 Actor Bind":"","---Menu 77---":"","Menu 77 Name":"","Menu 77 Symbol":"","Menu 77 Show":"","Menu 77 Enabled":"","Menu 77 Ext":"","Menu 77 Main Bind":"","Menu 77 Actor Bind":"","---Menu 78---":"","Menu 78 Name":"","Menu 78 Symbol":"","Menu 78 Show":"","Menu 78 Enabled":"","Menu 78 Ext":"","Menu 78 Main Bind":"","Menu 78 Actor Bind":"","---Menu 79---":"","Menu 79 Name":"","Menu 79 Symbol":"","Menu 79 Show":"","Menu 79 Enabled":"","Menu 79 Ext":"","Menu 79 Main Bind":"","Menu 79 Actor Bind":"","---Menu 80---":"","Menu 80 Name":"","Menu 80 Symbol":"","Menu 80 Show":"","Menu 80 Enabled":"","Menu 80 Ext":"","Menu 80 Main Bind":"","Menu 80 Actor Bind":"","---Menu 81---":"","Menu 81 Name":"'Common Event 1'","Menu 81 Symbol":"common event","Menu 81 Show":"false","Menu 81 Enabled":"true","Menu 81 Ext":"1","Menu 81 Main Bind":"this.callCommonEvent.bind(this)","Menu 81 Actor Bind":"","---Menu 82---":"","Menu 82 Name":"'Common Event 2'","Menu 82 Symbol":"common event","Menu 82 Show":"false","Menu 82 Enabled":"true","Menu 82 Ext":"2","Menu 82 Main Bind":"this.callCommonEvent.bind(this)","Menu 82 Actor Bind":"","---Menu 83---":"","Menu 83 Name":"'Common Event 3'","Menu 83 Symbol":"common event","Menu 83 Show":"false","Menu 83 Enabled":"true","Menu 83 Ext":"3","Menu 83 Main Bind":"this.callCommonEvent.bind(this)","Menu 83 Actor Bind":"","---Menu 84---":"","Menu 84 Name":"","Menu 84 Symbol":"","Menu 84 Show":"","Menu 84 Enabled":"","Menu 84 Ext":"","Menu 84 Main Bind":"","Menu 84 Actor Bind":"","---Menu 85---":"","Menu 85 Name":"","Menu 85 Symbol":"","Menu 85 Show":"","Menu 85 Enabled":"","Menu 85 Ext":"","Menu 85 Main Bind":"","Menu 85 Actor Bind":"","---Menu 86---":"","Menu 86 Name":"","Menu 86 Symbol":"","Menu 86 Show":"","Menu 86 Enabled":"","Menu 86 Ext":"","Menu 86 Main Bind":"","Menu 86 Actor Bind":"","---Menu 87---":"","Menu 87 Name":"","Menu 87 Symbol":"","Menu 87 Show":"","Menu 87 Enabled":"","Menu 87 Ext":"","Menu 87 Main Bind":"","Menu 87 Actor Bind":"","---Menu 88---":"","Menu 88 Name":"","Menu 88 Symbol":"","Menu 88 Show":"","Menu 88 Enabled":"","Menu 88 Ext":"","Menu 88 Main Bind":"","Menu 88 Actor Bind":"","---Menu 89---":"","Menu 89 Name":"","Menu 89 Symbol":"","Menu 89 Show":"","Menu 89 Enabled":"","Menu 89 Ext":"","Menu 89 Main Bind":"","Menu 89 Actor Bind":"","---Menu 90---":"","Menu 90 Name":"'游戏设置'","Menu 90 Symbol":"options","Menu 90 Show":"this.needsCommand('options')","Menu 90 Enabled":"this.isOptionsEnabled()","Menu 90 Ext":"","Menu 90 Main Bind":"this.commandOptions.bind(this)","Menu 90 Actor Bind":"","---Menu 91---":"","Menu 91 Name":"","Menu 91 Symbol":"","Menu 91 Show":"","Menu 91 Enabled":"","Menu 91 Ext":"","Menu 91 Main Bind":"","Menu 91 Actor Bind":"","---Menu 92---":"","Menu 92 Name":"","Menu 92 Symbol":"","Menu 92 Show":"","Menu 92 Enabled":"","Menu 92 Ext":"","Menu 92 Main Bind":"","Menu 92 Actor Bind":"","---Menu 93---":"","Menu 93 Name":"","Menu 93 Symbol":"","Menu 93 Show":"","Menu 93 Enabled":"","Menu 93 Ext":"","Menu 93 Main Bind":"","Menu 93 Actor Bind":"","---Menu 94---":"","Menu 94 Name":"","Menu 94 Symbol":"","Menu 94 Show":"","Menu 94 Enabled":"","Menu 94 Ext":"","Menu 94 Main Bind":"","Menu 94 Actor Bind":"","---Menu 95---":"","Menu 95 Name":"'储存'","Menu 95 Symbol":"save","Menu 95 Show":"this.needsCommand('save')","Menu 95 Enabled":"this.isSaveEnabled()","Menu 95 Ext":"","Menu 95 Main Bind":"this.commandSave.bind(this)","Menu 95 Actor Bind":"","---Menu 96---":"","Menu 96 Name":"","Menu 96 Symbol":"","Menu 96 Show":"","Menu 96 Enabled":"","Menu 96 Ext":"","Menu 96 Main Bind":"","Menu 96 Actor Bind":"","---Menu 97---":"","Menu 97 Name":"","Menu 97 Symbol":"","Menu 97 Show":"","Menu 97 Enabled":"","Menu 97 Ext":"","Menu 97 Main Bind":"","Menu 97 Actor Bind":"","---Menu 98---":"","Menu 98 Name":"","Menu 98 Symbol":"","Menu 98 Show":"","Menu 98 Enabled":"","Menu 98 Ext":"","Menu 98 Main Bind":"","Menu 98 Actor Bind":"","---Menu 99---":"","Menu 99 Name":"'Debug'","Menu 99 Symbol":"debug","Menu 99 Show":"false","Menu 99 Enabled":"true","Menu 99 Ext":"","Menu 99 Main Bind":"this.commandDebug.bind(this)","Menu 99 Actor Bind":"","---Menu 100---":"","Menu 100 Name":"'游戏结束'","Menu 100 Symbol":"gameEnd","Menu 100 Show":"true","Menu 100 Enabled":"this.isGameEndEnabled()","Menu 100 Ext":"","Menu 100 Main Bind":"this.commandGameEnd.bind(this)","Menu 100 Actor Bind":""}},
{"name":"YEP_ItemCore","status":true,"description":"v1.30 Changes the way Items are handled for your game\nand the Item Scene, too.","parameters":{"---General---":"","Max Items":"0","Max Weapons":"0","Max Armors":"0","Starting ID":"3000","Random Variance":"0","Negative Variance":"false","Name Format":"%1%2%3%4","Name Spacing":"true","Boost Format":"(+%1)","---Item Scene---":"","Updated Scene Item":"true","List Equipped Items":"true","Show Icon":"true","Icon Size":"128","Font Size":"20","Command Alignment":"center","Recovery Format":"","Add State":"","Add Buff":"","Remove State":"","Remove Buff":"","Maximum Icons":"4","Use Command":"打开 %1","Carry Format":"%1/%2","--Independent Items--":"","Midgame Note Parsing":"false"}},
{"name":"YEP_X_ItemCategories","status":true,"description":"v1.01 (Requires YEP_ItemCore.js) Assign items to various\ncategories under the item menu.","parameters":{"---General---":"","Category Order":"Category:记忆碎片, Category:卡包, Category:全部卡牌, Category:无属性, Category:火属性, Category:水属性, Category:土属性, Category:风属性, Category:光属性, Category:暗属性","---Naming---":"","Hidden Item A":"Special Items","Hidden Item B":"Unique Items","Consumable":"Consumable","Nonconsumable":"Nonconsumable","Always Usable":"Usable","Battle Usable":"Battle","Field Usable":"Field","Never Usable":"Misc"}},
{"name":"YEP_X_ItemPictureImg","status":true,"description":"v1.01 (Requires YEP_ItemCore.js) Allows you to use images\nfor items inside of the item menu instead of large icons.","parameters":{"Max Image Width":"128","Max Image Height":"128"}},
{"name":"YEP_OptionsCore","status":false,"description":"v1.02 Expand the Options Menu into a more elegant looking menu\nwith more customization potential.","parameters":{"---Categories---":"","OptionsCategories":"[\"{\\\"Name\\\":\\\"\\\\\\\\i[87]General\\\",\\\"---Settings---\\\":\\\"\\\",\\\"HelpDesc\\\":\\\"\\\\\\\"General settings that alter the way the game behaves.\\\\\\\"\\\",\\\"OptionsList\\\":\\\"[\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[87]Always Dash\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Player walks when OFF. Player dashes when ON.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nHolding SHIFT switches between walking and dashing.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"alwaysDash\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsOnOff(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"config[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[87]Command Remember\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Game remembers the last command selected during battle.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"commandRemember\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsOnOff(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"config[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[87]ATB Speed\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Determines how fast the ATB Gauge fills up during battle.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"atbSpeed\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"if (Imported.YEP_X_BattleSysATB) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = $gameSystem.getBattleSystem() === 'atb';\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = value / 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor1 = this.textColor(13);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor2 = this.textColor(5);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(this.statusText(index), titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value > 10) value = 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value > 10) value = 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value < 1) value = 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[87]Enemy Difficulty\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Determines the level strength of enemies.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"difficultySlider\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"if (Imported.YEP_X_DifficultySlider) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = $gameSystem.showDifficultySlider();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = value / Yanfly.Param.DSliderMaxDif;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor1 = this.textColor(28);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor2 = this.textColor(29);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(this.statusText(index), titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += Yanfly.Param.DSliderChange;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value > Yanfly.Param.DSliderMaxDif) value = Yanfly.Param.DSliderMinDif;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(Yanfly.Param.DSliderMinDif, Yanfly.Param.DSliderMaxDif);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += Yanfly.Param.DSliderChange;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(Yanfly.Param.DSliderMinDif, Yanfly.Param.DSliderMaxDif);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= Yanfly.Param.DSliderChange;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(Yanfly.Param.DSliderMinDif,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nYanfly.Param.DSliderMaxDif);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[87]Message Speed\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Changes the speed text is displayed during messages.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"messageSpeed\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = Imported.YEP_X_MessageSpeedOpt;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = ((value) / 10).clamp(0, 1);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value > 10) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  var gaugeColor1 = this.textColor(14);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  var gaugeColor2 = this.textColor(6);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  var gaugeColor1 = this.textColor(20);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  var gaugeColor2 = this.textColor(21);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(this.statusText(index), titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value > 11) value = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 11);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 11);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 11);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[87]Quest Window\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Show a window displaying the currently active\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nquest on the screen while exploring.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"mapQuestWindow\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = Imported.YEP_X_MapQuestWindow;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsOnOff(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\"]\\\"}\",\"{\\\"Name\\\":\\\"\\\\\\\\i[80]Audio\\\",\\\"---Settings---\\\":\\\"\\\",\\\"HelpDesc\\\":\\\"\\\\\\\"Adjust the audio settings for the game.\\\\\\\"\\\",\\\"OptionsList\\\":\\\"[\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[80]Master Volume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Adjusts the overall volume of the game.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"masterVolume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = value / 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor1 = this.textColor(22);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor2 = this.textColor(23);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(this.statusText(index), titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value > 100) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  value = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"config[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var value = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value !== undefined) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ConfigManager[symbol] = Number(value).clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[80]BGM Volume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Adjusts the volume of the background music.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bgmVolume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = value / 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor1 = this.textColor(30);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor2 = this.textColor(31);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(this.statusText(index), titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value > 100) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  value = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"config[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var value = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value !== undefined) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ConfigManager[symbol] = Number(value).clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[80]BGS Volume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Adjusts the volume of the background sound effects.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"bgsVolume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = value / 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor1 = this.textColor(30);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor2 = this.textColor(31);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(this.statusText(index), titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value > 100) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  value = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"config[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var value = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value !== undefined) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ConfigManager[symbol] = Number(value).clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[80]ME Volume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Adjusts the volume of the melody effects\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nsuch as fanfares.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"meVolume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = value / 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor1 = this.textColor(30);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor2 = this.textColor(31);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(this.statusText(index), titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value > 100) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  value = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"config[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var value = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value !== undefined) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ConfigManager[symbol] = Number(value).clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[80]SE Volume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Adjusts the volume of the sound effects.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"seVolume\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = value / 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor1 = this.textColor(30);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor2 = this.textColor(31);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(this.statusText(index), titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value > 100) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  value = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= this.volumeOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"config[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var value = config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value !== undefined) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ConfigManager[symbol] = Number(value).clamp(0, 100);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  ConfigManager[symbol] = 100;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\"]\\\"}\",\"{\\\"Name\\\":\\\"\\\\\\\\i[302]Visual\\\",\\\"---Settings---\\\":\\\"\\\",\\\"HelpDesc\\\":\\\"\\\\\\\"Settings that adjust the visual properties of the game.\\\\\\\"\\\",\\\"OptionsList\\\":\\\"[\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[188]Animated Cards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Cards of higher rarity are animated.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"cardAnimatedCards\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = Imported.Irina_CardGameCore.AnimateCardOptionShow;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsOnOff(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[187]Booster Animations\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Plays the full Booster Pack opening animation if ON.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nOtherwise, it shows the contents of the pack(s) if OFF.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"cardBoosterAnimation\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = Imported.Irina_CardGameCore.BoosterOptionShow;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsOnOff(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[309]Window Tone: Red\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Changes the window tone's \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\c[2]red\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\c[0] value.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nHold SHIFT while pressing LEFT/RIGHT to adjust more.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"windowToneRed\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $gameSystem.windowTone()[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = (value + 255) / 510;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor1 = this.textColor(2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor2 = this.textColor(10);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(value, titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $dataSystem.windowTone[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeWindowTone(symbol, value, 'red');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $gameSystem.windowTone()[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar offset = this.windowToneOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (Input.isPressed('shift')) offset *= 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += offset;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeWindowTone(symbol, value, 'red');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $gameSystem.windowTone()[0];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar offset = this.windowToneOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (Input.isPressed('shift')) offset *= 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= offset;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeWindowTone(symbol, value, 'red');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"config[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = !!config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[311]Window Tone: Green\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Changes the window tone's \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\c[3]green\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\c[0] value.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nHold SHIFT while pressing LEFT/RIGHT to adjust more.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"windowToneGreen\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $gameSystem.windowTone()[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = (value + 255) / 510;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor1 = this.textColor(3);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor2 = this.textColor(11);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(value, titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $dataSystem.windowTone[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeWindowTone(symbol, value, 'green');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $gameSystem.windowTone()[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar offset = this.windowToneOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (Input.isPressed('shift')) offset *= 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += offset;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeWindowTone(symbol, value, 'green');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $gameSystem.windowTone()[1];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar offset = this.windowToneOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (Input.isPressed('shift')) offset *= 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= offset;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeWindowTone(symbol, value, 'green');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"config[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = !!config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[312]Window Tone: Blue\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Changes the window tone's \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\c[1]blue\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\c[0] value.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nHold SHIFT while pressing LEFT/RIGHT to adjust more.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"windowToneBlue\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $gameSystem.windowTone()[2];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar rate = (value + 255) / 510;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor1 = this.textColor(1);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar gaugeColor2 = this.textColor(9);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsGauge(index, rate, gaugeColor1, gaugeColor2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(value, titleWidth, rect.y, statusWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $dataSystem.windowTone[2];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeWindowTone(symbol, value, 'blue');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $gameSystem.windowTone()[2];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar offset = this.windowToneOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (Input.isPressed('shift')) offset *= 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += offset;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeWindowTone(symbol, value, 'blue');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = $gameSystem.windowTone()[2];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar offset = this.windowToneOffset();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (Input.isPressed('shift')) offset *= 10;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= offset;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeWindowTone(symbol, value, 'blue');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"config[symbol] = ConfigManager[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ConfigManager[symbol] = !!config[symbol];\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"if (Imported.YEP_StaticTilesOption) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else if (Imported.YEP_BattleAniSpeedOpt) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else if (Imported.YEP_X_ActSeqPack3) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else if (Imported.YEP_SynchFpsOption) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[302]Animated Tiles\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Turns animated tiles ON or OFF.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"animateTiles\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = Imported.YEP_StaticTilesOption;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsOnOff(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[302]Battle Animation Speed\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Changes the speed of battle animations.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"battleAniSpeed\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = Imported.YEP_BattleAniSpeedOpt;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar quarterWidth = statusWidth / 4;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(value === 4);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar text = this.battleAnimationSpeedText(4);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(text, titleWidth + quarterWidth * 0, rect.y, quarterWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(value === 3);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar text = this.battleAnimationSpeedText(3);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(text, titleWidth + quarterWidth * 1, rect.y, quarterWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(value === 2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar text = this.battleAnimationSpeedText(2);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(text, titleWidth + quarterWidth * 2, rect.y, quarterWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(value === 1);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar text = this.battleAnimationSpeedText(1);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawText(text, titleWidth + quarterWidth * 3, rect.y, quarterWidth, 'center');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nif (value <= 0) value = 4;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(1, 4);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue -= 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(1, 4);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue += 1;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvalue = value.clamp(1, 4);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[302]Battle Camera\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"If ON, the camera in battle will move around.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nIf OFF, the camera in battle will be locked in place.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"battleCamera\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = Imported.YEP_X_ActSeqPack3;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsOnOff(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[302]Synch Monitor FPS\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Turn this ON if your monitor runs above 60 FPS\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nto synchronize the game to run at 60 FPS.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"synchFps\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = Imported.YEP_SynchFpsOption;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsOnOff(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, !value);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, true);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var index = this.index();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar symbol = this.commandSymbol(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar value = this.getConfigValue(symbol);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changeValue(symbol, false);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\"]\\\"}\",\"{\\\"Name\\\":\\\"\\\\\\\\i[83]Controls\\\",\\\"---Settings---\\\":\\\"\\\",\\\"HelpDesc\\\":\\\"\\\\\\\"Change the way you can control the game.\\\\\\\"\\\",\\\"OptionsList\\\":\\\"[\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[83]Gamepad Config\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Configure the game's gamepad settings.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"gamepadConfig\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"if (Imported.GamepadConfig && Input.isControllerConnected()) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = !Utils.isMobileDevice();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.playOkSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nSceneManager.push(Scene_GamepadConfig);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\i[83]Keyboard Config\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Configure the game's keyboard settings.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"keyConfig\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"if (Imported.YEP_KeyboardConfig) {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = !Utils.isMobileDevice();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n  show = false;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"var rect = this.itemRectForText(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar statusWidth = this.statusWidth();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nvar titleWidth = rect.width - statusWidth;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.resetTextColor();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.changePaintOpacity(this.isCommandEnabled(index));\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nthis.drawOptionsName(index);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.playOkSound();\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nSceneManager.push(Scene_KeyConfig);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\",\\\\\\\"{\\\\\\\\\\\\\\\"Name\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Settings---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"HelpDesc\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Symbol\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"none\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ShowHide\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"show = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Enable\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"enabled = true;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"Ext\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ext = 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"---Functions---\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"MakeCommandCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"this.addCommand(name, symbol, enabled, ext);\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DrawItemCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"ProcessOkCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorRightCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"CursorLeftCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"DefaultConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"SaveConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\"LoadConfigCode\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}\\\\\\\"]\\\"}\"]","---Options Menu---":"","AllCommand":"\\i[160]All","AllHelpDesc":"\"A list of all of the game's settings.\"","ExitCommand":"\\i[16]Exit","ExitHelpDesc":"\"Exit the Options Menu.\"","---Options Settings---":"","CategoryWidth":"240","StatusWidth":"400","VolumeOffset":"10","WindowToneOffset":"5"}},
{"name":"YEP_KeyNameEntry","status":true,"description":"v1.00 Allows the Name Input Processing event to function\nwith the keyboard keys to enter in letters and numbers.","parameters":{"KeyboardMsg":"\"请输入卡组名称.\\n按下 \\\\c[6]ENTER/回车\\\\c[0] 键以继续\\n\\n或者\\n\\n按下 \\\\c[6]方向键\\\\c[0] 以切换至\\n手动虚拟键盘输入\\n按下 \\\\c[6]ESC\\\\c[0] 键返回至键盘输入\"","QWERTY Layout":"true"}},
{"name":"--------------------","status":false,"description":"","parameters":{}},
{"name":"Irina_PerformanceUpgrade","status":true,"description":"<PerformanceUpgrade> for RPG Maker MV version 1.6.2.","parameters":{"":"","AnimationHue":"true","BlurMenuBackground":"true","BlurIntensity":"0.5","CacheTextColors":"true","EnemyHue":"true","PixiContainerFlush":"true","SkipUnnecessarySnapshots":"true"}},
{"name":"--------------------","status":false,"description":"","parameters":{}},
{"name":"Olivia_AntiPlayerStress","status":true,"description":"<AntiPlayerStress> for RPG Maker MV version 1.6.1.","parameters":{"":"","ATTENTION!!!":"!!! READ THE HELP FILE !!!","Center Title Command":"true","Default Options":"","Always Dash":"true","Command Remember":"true","Default Volume":"40","Encounter Rate Minimum":"10","Escape Always":"true","Hit Rate Stacking":"true","Level Up":"","Recover Full HP":"true","Recover Full MP":"true","Proper Error Display":"true"}},
{"name":"--------------------","status":false,"description":"","parameters":{}},
{"name":"Irina_CardGameCore","status":true,"description":"<CardGameCore> for RMVMV 1.6.2. Place above other CCG plugins.","parameters":{"":"","Templates:ArrayStruct":"[\"{\\\"Name:str\\\":\\\"None\\\",\\\"ImgFile:str\\\":\\\"CardNone\\\",\\\"IconIndex:num\\\":\\\"247\\\",\\\"AnimationId:num\\\":\\\"21\\\",\\\"\\\":\\\"\\\",\\\"DrawCode:func\\\":\\\"\\\\\\\"// Setup Bitmap\\\\\\\\nvar bitmap = this._cardFrontDrawSprite.bitmap;\\\\\\\\nvar holoBitmap = this._cardFrontHoloDrawSprite.bitmap;\\\\\\\\nbitmap.clear();\\\\\\\\nholoBitmap.clear();\\\\\\\\n\\\\\\\\n// Setup Colors\\\\\\\\nvar white = 'rgba(255, 255, 255)';\\\\\\\\nvar red   = 'rgba(255, 128, 128)';\\\\\\\\nvar green = 'rgba( 64, 255,  64)';\\\\\\\\nvar black = 'rgba(  0,   0,   0)';\\\\\\\\nvar holo  = 'rgba(255, 192, 192)';\\\\\\\\nvar gray  = 'rgba(  0,   0,   0, 0.5)';\\\\\\\\n\\\\\\\\n// Name\\\\\\\\nvar text = this._card.name();\\\\\\\\nvar x = 60;\\\\\\\\nvar y = 4;\\\\\\\\nvar w = bitmap.width - x - 28;\\\\\\\\nvar h = 48;\\\\\\\\nvar rainbow = this._card.rarityColor().match(/(?:rainbow|holo)/i);\\\\\\\\nvar target = (rainbow) ? holoBitmap : bitmap;\\\\\\\\ntarget.fontFace = 'Arial';\\\\\\\\ntarget.fontSize = 28;\\\\\\\\nif (text === this._card._original._name) {\\\\\\\\n  target.textColor = (rainbow) ? holo : this._card.rarityColor();\\\\\\\\n} else {\\\\\\\\n  target.textColor = green;\\\\\\\\n}\\\\\\\\ntarget.outlineColor = gray;\\\\\\\\ntarget.drawText(text, x, y, w, h, 'left');\\\\\\\\n\\\\\\\\n// Level\\\\\\\\nvar level = this._card.level();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 56;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (level > this._card._original._level) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (level < this._card._original._level) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(level, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n// Power\\\\\\\\nvar power = this._card.power();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 108;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (power > this._card._original._power) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (power < this._card._original._power) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(power, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\nif (!$showCardHealth) return;\\\\\\\\n\\\\\\\\n// Health\\\\\\\\nvar healthBitmap = ImageManager.loadPicture('CardHeartIcon');\\\\\\\\nhealthBitmap.addLoadListener(function(bitmap, healthBitmap) {\\\\\\\\n\\\\\\\\nvar health = this._card.currentHealth();\\\\\\\\nvar maxHealth = this._card.maxHealth();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 160;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.blt(healthBitmap, 0, 0, healthBitmap.width, healthBitmap.height, x, y);\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (health > maxHealth) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (health < maxHealth && health <= 1) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(health, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n}.bind(this, bitmap, healthBitmap));\\\\\\\"\\\",\\\"TextboxX:num\\\":\\\"56\\\",\\\"TextboxY:num\\\":\\\"356\\\",\\\"TextboxWidth:num\\\":\\\"238\\\",\\\"TextboxHeight:num\\\":\\\"100\\\"}\",\"{\\\"Name:str\\\":\\\"Fire\\\",\\\"ImgFile:str\\\":\\\"CardFire\\\",\\\"IconIndex:num\\\":\\\"64\\\",\\\"AnimationId:num\\\":\\\"107\\\",\\\"\\\":\\\"\\\",\\\"DrawCode:func\\\":\\\"\\\\\\\"// Setup Bitmap\\\\\\\\nvar bitmap = this._cardFrontDrawSprite.bitmap;\\\\\\\\nvar holoBitmap = this._cardFrontHoloDrawSprite.bitmap;\\\\\\\\nbitmap.clear();\\\\\\\\nholoBitmap.clear();\\\\\\\\n\\\\\\\\n// Setup Colors\\\\\\\\nvar white = 'rgba(255, 255, 255)';\\\\\\\\nvar red   = 'rgba(255, 128, 128)';\\\\\\\\nvar green = 'rgba( 64, 255,  64)';\\\\\\\\nvar black = 'rgba(  0,   0,   0)';\\\\\\\\nvar holo  = 'rgba(255, 192, 192)';\\\\\\\\nvar gray  = 'rgba(  0,   0,   0, 0.5)';\\\\\\\\n\\\\\\\\n// Name\\\\\\\\nvar text = this._card.name();\\\\\\\\nvar x = 60;\\\\\\\\nvar y = 4;\\\\\\\\nvar w = bitmap.width - x - 28;\\\\\\\\nvar h = 48;\\\\\\\\nvar rainbow = this._card.rarityColor().match(/(?:rainbow|holo)/i);\\\\\\\\nvar target = (rainbow) ? holoBitmap : bitmap;\\\\\\\\ntarget.fontFace = 'Arial';\\\\\\\\ntarget.fontSize = 28;\\\\\\\\nif (text === this._card._original._name) {\\\\\\\\n  target.textColor = (rainbow) ? holo : this._card.rarityColor();\\\\\\\\n} else {\\\\\\\\n  target.textColor = green;\\\\\\\\n}\\\\\\\\ntarget.outlineColor = gray;\\\\\\\\ntarget.drawText(text, x, y, w, h, 'left');\\\\\\\\n\\\\\\\\n// Level\\\\\\\\nvar level = this._card.level();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 56;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (level > this._card._original._level) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (level < this._card._original._level) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(level, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n// Power\\\\\\\\nvar power = this._card.power();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 108;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (power > this._card._original._power) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (power < this._card._original._power) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(power, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\nif (!$showCardHealth) return;\\\\\\\\n\\\\\\\\n// Health\\\\\\\\nvar healthBitmap = ImageManager.loadPicture('CardHeartIcon');\\\\\\\\nhealthBitmap.addLoadListener(function(bitmap, healthBitmap) {\\\\\\\\n\\\\\\\\nvar health = this._card.currentHealth();\\\\\\\\nvar maxHealth = this._card.maxHealth();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 160;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.blt(healthBitmap, 0, 0, healthBitmap.width, healthBitmap.height, x, y);\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (health > maxHealth) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (health < maxHealth && health <= 1) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(health, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n}.bind(this, bitmap, healthBitmap));\\\\\\\"\\\",\\\"TextboxX:num\\\":\\\"56\\\",\\\"TextboxY:num\\\":\\\"356\\\",\\\"TextboxWidth:num\\\":\\\"238\\\",\\\"TextboxHeight:num\\\":\\\"100\\\"}\",\"{\\\"Name:str\\\":\\\"Water\\\",\\\"ImgFile:str\\\":\\\"CardWater\\\",\\\"IconIndex:num\\\":\\\"67\\\",\\\"AnimationId:num\\\":\\\"81\\\",\\\"\\\":\\\"\\\",\\\"DrawCode:func\\\":\\\"\\\\\\\"// Setup Bitmap\\\\\\\\nvar bitmap = this._cardFrontDrawSprite.bitmap;\\\\\\\\nvar holoBitmap = this._cardFrontHoloDrawSprite.bitmap;\\\\\\\\nbitmap.clear();\\\\\\\\nholoBitmap.clear();\\\\\\\\n\\\\\\\\n// Setup Colors\\\\\\\\nvar white = 'rgba(255, 255, 255)';\\\\\\\\nvar red   = 'rgba(255, 128, 128)';\\\\\\\\nvar green = 'rgba( 64, 255,  64)';\\\\\\\\nvar black = 'rgba(  0,   0,   0)';\\\\\\\\nvar holo  = 'rgba(255, 192, 192)';\\\\\\\\nvar gray  = 'rgba(  0,   0,   0, 0.5)';\\\\\\\\n\\\\\\\\n// Name\\\\\\\\nvar text = this._card.name();\\\\\\\\nvar x = 60;\\\\\\\\nvar y = 4;\\\\\\\\nvar w = bitmap.width - x - 28;\\\\\\\\nvar h = 48;\\\\\\\\nvar rainbow = this._card.rarityColor().match(/(?:rainbow|holo)/i);\\\\\\\\nvar target = (rainbow) ? holoBitmap : bitmap;\\\\\\\\ntarget.fontFace = 'Arial';\\\\\\\\ntarget.fontSize = 28;\\\\\\\\nif (text === this._card._original._name) {\\\\\\\\n  target.textColor = (rainbow) ? holo : this._card.rarityColor();\\\\\\\\n} else {\\\\\\\\n  target.textColor = green;\\\\\\\\n}\\\\\\\\ntarget.outlineColor = gray;\\\\\\\\ntarget.drawText(text, x, y, w, h, 'left');\\\\\\\\n\\\\\\\\n// Level\\\\\\\\nvar level = this._card.level();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 56;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (level > this._card._original._level) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (level < this._card._original._level) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(level, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n// Power\\\\\\\\nvar power = this._card.power();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 108;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (power > this._card._original._power) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (power < this._card._original._power) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(power, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\nif (!$showCardHealth) return;\\\\\\\\n\\\\\\\\n// Health\\\\\\\\nvar healthBitmap = ImageManager.loadPicture('CardHeartIcon');\\\\\\\\nhealthBitmap.addLoadListener(function(bitmap, healthBitmap) {\\\\\\\\n\\\\\\\\nvar health = this._card.currentHealth();\\\\\\\\nvar maxHealth = this._card.maxHealth();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 160;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.blt(healthBitmap, 0, 0, healthBitmap.width, healthBitmap.height, x, y);\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (health > maxHealth) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (health < maxHealth && health <= 1) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(health, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n}.bind(this, bitmap, healthBitmap));\\\\\\\"\\\",\\\"TextboxX:num\\\":\\\"56\\\",\\\"TextboxY:num\\\":\\\"356\\\",\\\"TextboxWidth:num\\\":\\\"238\\\",\\\"TextboxHeight:num\\\":\\\"100\\\"}\",\"{\\\"Name:str\\\":\\\"Earth\\\",\\\"ImgFile:str\\\":\\\"CardEarth\\\",\\\"IconIndex:num\\\":\\\"68\\\",\\\"AnimationId:num\\\":\\\"86\\\",\\\"\\\":\\\"\\\",\\\"DrawCode:func\\\":\\\"\\\\\\\"// Setup Bitmap\\\\\\\\nvar bitmap = this._cardFrontDrawSprite.bitmap;\\\\\\\\nvar holoBitmap = this._cardFrontHoloDrawSprite.bitmap;\\\\\\\\nbitmap.clear();\\\\\\\\nholoBitmap.clear();\\\\\\\\n\\\\\\\\n// Setup Colors\\\\\\\\nvar white = 'rgba(255, 255, 255)';\\\\\\\\nvar red   = 'rgba(255, 128, 128)';\\\\\\\\nvar green = 'rgba( 64, 255,  64)';\\\\\\\\nvar black = 'rgba(  0,   0,   0)';\\\\\\\\nvar holo  = 'rgba(255, 192, 192)';\\\\\\\\nvar gray  = 'rgba(  0,   0,   0, 0.5)';\\\\\\\\n\\\\\\\\n// Name\\\\\\\\nvar text = this._card.name();\\\\\\\\nvar x = 60;\\\\\\\\nvar y = 4;\\\\\\\\nvar w = bitmap.width - x - 28;\\\\\\\\nvar h = 48;\\\\\\\\nvar rainbow = this._card.rarityColor().match(/(?:rainbow|holo)/i);\\\\\\\\nvar target = (rainbow) ? holoBitmap : bitmap;\\\\\\\\ntarget.fontFace = 'Arial';\\\\\\\\ntarget.fontSize = 28;\\\\\\\\nif (text === this._card._original._name) {\\\\\\\\n  target.textColor = (rainbow) ? holo : this._card.rarityColor();\\\\\\\\n} else {\\\\\\\\n  target.textColor = green;\\\\\\\\n}\\\\\\\\ntarget.outlineColor = gray;\\\\\\\\ntarget.drawText(text, x, y, w, h, 'left');\\\\\\\\n\\\\\\\\n// Level\\\\\\\\nvar level = this._card.level();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 56;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (level > this._card._original._level) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (level < this._card._original._level) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(level, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n// Power\\\\\\\\nvar power = this._card.power();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 108;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (power > this._card._original._power) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (power < this._card._original._power) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(power, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\nif (!$showCardHealth) return;\\\\\\\\n\\\\\\\\n// Health\\\\\\\\nvar healthBitmap = ImageManager.loadPicture('CardHeartIcon');\\\\\\\\nhealthBitmap.addLoadListener(function(bitmap, healthBitmap) {\\\\\\\\n\\\\\\\\nvar health = this._card.currentHealth();\\\\\\\\nvar maxHealth = this._card.maxHealth();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 160;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.blt(healthBitmap, 0, 0, healthBitmap.width, healthBitmap.height, x, y);\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (health > maxHealth) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (health < maxHealth && health <= 1) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(health, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n}.bind(this, bitmap, healthBitmap));\\\\\\\"\\\",\\\"TextboxX:num\\\":\\\"56\\\",\\\"TextboxY:num\\\":\\\"356\\\",\\\"TextboxWidth:num\\\":\\\"238\\\",\\\"TextboxHeight:num\\\":\\\"100\\\"}\",\"{\\\"Name:str\\\":\\\"Wind\\\",\\\"ImgFile:str\\\":\\\"CardWind\\\",\\\"IconIndex:num\\\":\\\"69\\\",\\\"AnimationId:num\\\":\\\"92\\\",\\\"\\\":\\\"\\\",\\\"DrawCode:func\\\":\\\"\\\\\\\"// Setup Bitmap\\\\\\\\nvar bitmap = this._cardFrontDrawSprite.bitmap;\\\\\\\\nvar holoBitmap = this._cardFrontHoloDrawSprite.bitmap;\\\\\\\\nbitmap.clear();\\\\\\\\nholoBitmap.clear();\\\\\\\\n\\\\\\\\n// Setup Colors\\\\\\\\nvar white = 'rgba(255, 255, 255)';\\\\\\\\nvar red   = 'rgba(255, 128, 128)';\\\\\\\\nvar green = 'rgba( 64, 255,  64)';\\\\\\\\nvar black = 'rgba(  0,   0,   0)';\\\\\\\\nvar holo  = 'rgba(255, 192, 192)';\\\\\\\\nvar gray  = 'rgba(  0,   0,   0, 0.5)';\\\\\\\\n\\\\\\\\n// Name\\\\\\\\nvar text = this._card.name();\\\\\\\\nvar x = 60;\\\\\\\\nvar y = 4;\\\\\\\\nvar w = bitmap.width - x - 28;\\\\\\\\nvar h = 48;\\\\\\\\nvar rainbow = this._card.rarityColor().match(/(?:rainbow|holo)/i);\\\\\\\\nvar target = (rainbow) ? holoBitmap : bitmap;\\\\\\\\ntarget.fontFace = 'Arial';\\\\\\\\ntarget.fontSize = 28;\\\\\\\\nif (text === this._card._original._name) {\\\\\\\\n  target.textColor = (rainbow) ? holo : this._card.rarityColor();\\\\\\\\n} else {\\\\\\\\n  target.textColor = green;\\\\\\\\n}\\\\\\\\ntarget.outlineColor = gray;\\\\\\\\ntarget.drawText(text, x, y, w, h, 'left');\\\\\\\\n\\\\\\\\n// Level\\\\\\\\nvar level = this._card.level();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 56;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (level > this._card._original._level) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (level < this._card._original._level) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(level, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n// Power\\\\\\\\nvar power = this._card.power();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 108;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (power > this._card._original._power) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (power < this._card._original._power) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(power, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\nif (!$showCardHealth) return;\\\\\\\\n\\\\\\\\n// Health\\\\\\\\nvar healthBitmap = ImageManager.loadPicture('CardHeartIcon');\\\\\\\\nhealthBitmap.addLoadListener(function(bitmap, healthBitmap) {\\\\\\\\n\\\\\\\\nvar health = this._card.currentHealth();\\\\\\\\nvar maxHealth = this._card.maxHealth();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 160;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.blt(healthBitmap, 0, 0, healthBitmap.width, healthBitmap.height, x, y);\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (health > maxHealth) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (health < maxHealth && health <= 1) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(health, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n}.bind(this, bitmap, healthBitmap));\\\\\\\"\\\",\\\"TextboxX:num\\\":\\\"56\\\",\\\"TextboxY:num\\\":\\\"356\\\",\\\"TextboxWidth:num\\\":\\\"238\\\",\\\"TextboxHeight:num\\\":\\\"100\\\"}\",\"{\\\"Name:str\\\":\\\"Light\\\",\\\"ImgFile:str\\\":\\\"CardLight\\\",\\\"IconIndex:num\\\":\\\"248\\\",\\\"AnimationId:num\\\":\\\"97\\\",\\\"\\\":\\\"\\\",\\\"DrawCode:func\\\":\\\"\\\\\\\"// Setup Bitmap\\\\\\\\nvar bitmap = this._cardFrontDrawSprite.bitmap;\\\\\\\\nvar holoBitmap = this._cardFrontHoloDrawSprite.bitmap;\\\\\\\\nbitmap.clear();\\\\\\\\nholoBitmap.clear();\\\\\\\\n\\\\\\\\n// Setup Colors\\\\\\\\nvar white = 'rgba(255, 255, 255)';\\\\\\\\nvar red   = 'rgba(255, 128, 128)';\\\\\\\\nvar green = 'rgba( 64, 255,  64)';\\\\\\\\nvar black = 'rgba(  0,   0,   0)';\\\\\\\\nvar holo  = 'rgba(255, 192, 192)';\\\\\\\\nvar gray  = 'rgba(  0,   0,   0, 0.5)';\\\\\\\\n\\\\\\\\n// Name\\\\\\\\nvar text = this._card.name();\\\\\\\\nvar x = 60;\\\\\\\\nvar y = 4;\\\\\\\\nvar w = bitmap.width - x - 28;\\\\\\\\nvar h = 48;\\\\\\\\nvar rainbow = this._card.rarityColor().match(/(?:rainbow|holo)/i);\\\\\\\\nvar target = (rainbow) ? holoBitmap : bitmap;\\\\\\\\ntarget.fontFace = 'Arial';\\\\\\\\ntarget.fontSize = 28;\\\\\\\\nif (text === this._card._original._name) {\\\\\\\\n  target.textColor = (rainbow) ? holo : this._card.rarityColor();\\\\\\\\n} else {\\\\\\\\n  target.textColor = green;\\\\\\\\n}\\\\\\\\ntarget.outlineColor = gray;\\\\\\\\ntarget.drawText(text, x, y, w, h, 'left');\\\\\\\\n\\\\\\\\n// Level\\\\\\\\nvar level = this._card.level();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 56;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (level > this._card._original._level) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (level < this._card._original._level) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(level, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n// Power\\\\\\\\nvar power = this._card.power();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 108;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (power > this._card._original._power) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (power < this._card._original._power) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(power, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\nif (!$showCardHealth) return;\\\\\\\\n\\\\\\\\n// Health\\\\\\\\nvar healthBitmap = ImageManager.loadPicture('CardHeartIcon');\\\\\\\\nhealthBitmap.addLoadListener(function(bitmap, healthBitmap) {\\\\\\\\n\\\\\\\\nvar health = this._card.currentHealth();\\\\\\\\nvar maxHealth = this._card.maxHealth();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 160;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.blt(healthBitmap, 0, 0, healthBitmap.width, healthBitmap.height, x, y);\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (health > maxHealth) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (health < maxHealth && health <= 1) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(health, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n}.bind(this, bitmap, healthBitmap));\\\\\\\"\\\",\\\"TextboxX:num\\\":\\\"56\\\",\\\"TextboxY:num\\\":\\\"356\\\",\\\"TextboxWidth:num\\\":\\\"238\\\",\\\"TextboxHeight:num\\\":\\\"100\\\"}\",\"{\\\"Name:str\\\":\\\"Dark\\\",\\\"ImgFile:str\\\":\\\"CardDark\\\",\\\"IconIndex:num\\\":\\\"71\\\",\\\"AnimationId:num\\\":\\\"102\\\",\\\"\\\":\\\"\\\",\\\"DrawCode:func\\\":\\\"\\\\\\\"// Setup Bitmap\\\\\\\\nvar bitmap = this._cardFrontDrawSprite.bitmap;\\\\\\\\nvar holoBitmap = this._cardFrontHoloDrawSprite.bitmap;\\\\\\\\nbitmap.clear();\\\\\\\\nholoBitmap.clear();\\\\\\\\n\\\\\\\\n// Setup Colors\\\\\\\\nvar white = 'rgba(255, 255, 255)';\\\\\\\\nvar red   = 'rgba(255, 128, 128)';\\\\\\\\nvar green = 'rgba( 64, 255,  64)';\\\\\\\\nvar black = 'rgba(  0,   0,   0)';\\\\\\\\nvar holo  = 'rgba(255, 192, 192)';\\\\\\\\nvar gray  = 'rgba(  0,   0,   0, 0.5)';\\\\\\\\n\\\\\\\\n// Name\\\\\\\\nvar text = this._card.name();\\\\\\\\nvar x = 60;\\\\\\\\nvar y = 4;\\\\\\\\nvar w = bitmap.width - x - 28;\\\\\\\\nvar h = 48;\\\\\\\\nvar rainbow = this._card.rarityColor().match(/(?:rainbow|holo)/i);\\\\\\\\nvar target = (rainbow) ? holoBitmap : bitmap;\\\\\\\\ntarget.fontFace = 'Arial';\\\\\\\\ntarget.fontSize = 28;\\\\\\\\nif (text === this._card._original._name) {\\\\\\\\n  target.textColor = (rainbow) ? holo : this._card.rarityColor();\\\\\\\\n} else {\\\\\\\\n  target.textColor = green;\\\\\\\\n}\\\\\\\\ntarget.outlineColor = gray;\\\\\\\\ntarget.drawText(text, x, y, w, h, 'left');\\\\\\\\n\\\\\\\\n// Level\\\\\\\\nvar level = this._card.level();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 56;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (level > this._card._original._level) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (level < this._card._original._level) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(level, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n// Power\\\\\\\\nvar power = this._card.power();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 108;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (power > this._card._original._power) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (power < this._card._original._power) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(power, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\nif (!$showCardHealth) return;\\\\\\\\n\\\\\\\\n// Health\\\\\\\\nvar healthBitmap = ImageManager.loadPicture('CardHeartIcon');\\\\\\\\nhealthBitmap.addLoadListener(function(bitmap, healthBitmap) {\\\\\\\\n\\\\\\\\nvar health = this._card.currentHealth();\\\\\\\\nvar maxHealth = this._card.maxHealth();\\\\\\\\nvar x = 4;\\\\\\\\nvar y = 160;\\\\\\\\nvar w = 48;\\\\\\\\nvar h = 48;\\\\\\\\nbitmap.blt(healthBitmap, 0, 0, healthBitmap.width, healthBitmap.height, x, y);\\\\\\\\nbitmap.fontFace = 'Times New Roman';\\\\\\\\nbitmap.fontSize = 28;\\\\\\\\nif (health > maxHealth) {\\\\\\\\n  bitmap.textColor = green;\\\\\\\\n} else if (health < maxHealth && health <= 1) {\\\\\\\\n  bitmap.textColor = red;\\\\\\\\n} else {\\\\\\\\n  bitmap.textColor = white;\\\\\\\\n}\\\\\\\\nbitmap.outlineColor = black;\\\\\\\\nbitmap.drawText(health, x, y, w, h, 'center');\\\\\\\\n\\\\\\\\n}.bind(this, bitmap, healthBitmap));\\\\\\\"\\\",\\\"TextboxX:num\\\":\\\"56\\\",\\\"TextboxY:num\\\":\\\"356\\\",\\\"TextboxWidth:num\\\":\\\"238\\\",\\\"TextboxHeight:num\\\":\\\"100\\\"}\"]","CardDesign":"------------------------------------","ShowHealth:eval":"false","FlipSound:str":"Book1","CardOutlineThickness:num":"1","CardOutlineColor:str":"rgba(0, 0, 0, 0)","CardMaskImg:str":"CardMask","CardBattleResultsImg:str":"CardBattleResults","CardPreload:eval":"true","CardBackDesign":"------------------------------------","CardBackImg:str":"CardBack","CardBackHueShift:num":"0.25","CardFrontDesign":"------------------------------------","CardFrontRarityColors:arraystr":"[\"rgba(50, 205, 50)\",\"rgba(0, 191, 255)\",\"rgba(196, 135, 255)\",\"rgba(255, 215, 0)\",\"rgba(250, 250, 250)\"]","CardFrontHoloBlendMode:num":"2","CardHoloOpacity:num":"128","CardHoloHueShift:num":"1.5","CardFrontBorderBlendMode:num":"0","CardFrontTextboxBlendMode:num":"1","CardFrontTextDefaultScale:num":"0.5","CardFrontIconBlendMode:num":"0","DefaultBoosterArt:str":"BoosterMV","DefaultBoosterBG:str":"Booster","RarityAuras:eval":"false","BoosterWindow":"------------------------------------","BoosterWindowInitialize:func":"\"var x = Graphics.boxWidth / 4;\\nvar y = this.fittingHeight(1) * 2;\\nvar width = (Graphics.boxWidth / 2);\\nvar height = Graphics.boxHeight - (this.fittingHeight(1) * 4);\\nWindow_ItemList.prototype.initialize.call(this, x, y, width, height);\\nthis.openness = 0;\\nthis.open();\\nthis.refresh();\"","BoosterWindowCreateTitleWindow:func":"\"var x = 0;\\nvar y = -this.fittingHeight(1);\\nvar width = this.width;\\nvar height = this.fittingHeight(1);\\nthis._titleWindow = new Window_Base(x, y, width, height);\\nthis.addChild(this._titleWindow);\\nif (this._times > 1) {\\n    var text = '卡包包含内容';\\n} else {\\n    var text = '卡包包含内容';\\n}\\nvar tx = (this._titleWindow.contents.width - this.textWidthEx(text)) / 2;\\nthis._titleWindow.drawTextEx(text, tx, 0);\\nthis._titleWindow.openness = 0;\\nthis._titleWindow.open();\"","BoosterWindowCreateUnderWindow:func":"\"var x = 0;\\nvar y = this.height;\\nvar width = this.width;\\nvar height = this.fittingHeight(1);\\nthis._underWindow = new Window_Base(x, y, width, height);\\nthis.addChild(this._underWindow);\\nvar text = '点击右键/esc以继续';\\nvar tx = (this._underWindow.contents.width - this.textWidthEx(text)) / 2;\\nthis._underWindow.drawTextEx(text, tx, 0);\\nthis._underWindow.openness = 0;\\nthis._underWindow.open();\"","BoosterWindowCreateShownCard:func":"\"this._shownCard = CardManager.createCard(this._data[0].id, false);\\nthis.x = (Graphics.boxWidth - (this.width + 320)) / 2 + 320 + this.fittingHeight(0.5);\\nthis._shownCard.sprite().x = this.x - 160 - this.fittingHeight(2);\\nthis._shownCard.sprite().y = Graphics.boxHeight / 2;\\nthis._shownCard.sprite().opacity = 0;\\nthis._shownCard.sprite()._backShowing = true;\\nthis._shownCard.sprite()._auraVisible = Imported.Irina_CardGameCore.RarityAuras;\\nthis._shownCard.sprite().fadeIn();\\nsetTimeout(this._shownCard.sprite().flip.bind(this._shownCard.sprite(), 20, false), 1000);\"","BoosterWindowDrawItem:func":"\"var index = arguments[0];\\nvar item = arguments[1];\\nthis.contents.fontSize = 16;\\nvar numberWidth = this.textWidth('00000');\\nvar rect = this.itemRect(index);\\nrect.width -= this.textPadding();\\nthis.drawItemCardNumber(item, rect.x, rect.y, rect.width);\\nthis.resetFontSettings();\\nthis.drawItemCardName(item, rect.x + numberWidth, rect.y, rect.width - numberWidth);\\nthis.changePaintOpacity(1);\"","ItemCoreAdditions":"------------------------------------","WindowRarityAuras:eval":"false","ItemCoreBoosterCommands:func":"\"// 'openCardBooster' is the handler for the opening a card booster command.\\nvar count = $gameParty.numItems(this._item);\\nvar fmt = '打开 x%1 \\\\\\\\i[' + this._item.iconIndex + ']' + this._item.name;\\nvar quantities = [5, 10, 20, 40, 60, 80, 100];\\nfor (var i = 0; i < quantities.length; i++) {\\n    var quantity = quantities[i];\\n    if (count > quantity) {\\n        var text = fmt.format(quantity);\\n        this.addCommand(text, 'openCardBooster', true, quantity);\\n    }\\n}\\nif (quantity > 1) {\\n    var text = fmt.format(count);\\n    this.addCommand(text, 'openCardBooster', true, count);\\n}\"","ItemCoreBoosterActionOpen:func":"\"// This code will run in addition to the default code\\n// when a booster pack is opened.\"","BoosterScene":"------------------------------------","PlayUniqueMusic:eval":"true","BoosterFadeOutBGM:num":"1","BoosterMusicSong:str":"Theme2","BoosterSceneCreateWindows:func":"\"// Setup Defaults\\nvar padding = Window_Base.prototype.standardPadding.call(this);\\nvar lh = Window_Base.prototype.lineHeight.call(this);\\nvar y = Graphics.boxHeight - lh - padding;\\nvar width = (Graphics.boxWidth / 2) + padding;\\nvar height = lh + padding * 2;\\nvar color1 = 'rgba(0, 0, 0, 0.8)';\\nvar color2 = 'rgba(0, 0, 0, 0)';\\n\\n// Bottom Left Window\\nvar x = -padding;\\nthis._bottomLeftWindow = new Window_Base(x, y, width, height);\\nthis.addWindow(this._bottomLeftWindow);\\nthis._bottomLeftWindow.contentsOpacity = 0;\\nthis._bottomLeftWindow.opacity = 0;\\nvar contents = this._bottomLeftWindow.contents;\\ncontents.gradientFillRect(0, lh/2, contents.width, lh/2, color1, color2);\\nvar text = '\\\\\\\\}\\\\\\\\}点击 \\\\\\\\c[17]空格\\\\\\\\c[0] 或 \\\\\\\\c[17]鼠标左键\\\\\\\\c[0] 以继续';\\nthis._bottomLeftWindow.drawTextEx(text, 6, lh/4);\\n\\n// Bottom Right Window\\nvar x = Graphics.boxWidth / 2;\\nthis._bottomRightWindow = new Window_Base(x, y, width, height);\\nthis.addWindow(this._bottomRightWindow);\\nthis._bottomRightWindow.contentsOpacity = 0;\\nthis._bottomRightWindow.opacity = 0;\\nvar contents = this._bottomRightWindow.contents;\\ncontents.gradientFillRect(0, lh/2, contents.width, lh/2, color2, color1);\\nvar text = '\\\\\\\\}\\\\\\\\}点击 \\\\\\\\c[17]Esc键\\\\\\\\c[0] 或 \\\\\\\\c[17]鼠标右键\\\\\\\\c[0] 以跳过';\\nvar cx = contents.width - Window_ChoiceList.prototype.textWidthEx.call(this._bottomRightWindow, text) - 6;\\nthis._bottomRightWindow.drawTextEx(text, cx, lh/4);\\n\\n// Booster List Window\\nvar x = -padding;\\nvar y = lh * 4\\nthis._boosterListWindow = new Window_Base(x, y, Graphics.boxWidth / 4, height);\\nthis.addChild(this._boosterListWindow);\\nthis._boosterListWindow.contentsOpacity = 0;\\nthis._boosterListWindow.opacity = 0;\\n\\n// Create Window Countdown Timer\\nthis._windowVisibilityCooldown = 150;\"","BoosterSceneStartPhase1:func":"\"// This is the phase where the Booster Pack appears on\\n// the screen and waits for the player to press OK or\\n// click somewhere on the screen before continuing.\\n\\n// Create Phase Information\\nthis._phase1pressed = false;\\n\\n// Create Booster Sprite\\nvar baseSprite = this._spriteset._baseSprite;\\nif (!this._boosterSprite) {\\n    this._boosterSprite = new Sprite_CardBase();\\n    baseSprite.addChild(this._boosterSprite);\\n    this._boosterSprite.bitmap = BoosterManager.getBoosterArt(this._item);\\n} else {\\n    baseSprite.removeChild(this._boosterSprite);\\n    baseSprite.addChild(this._boosterSprite);\\n}\\nthis._boosterSprite.x = Graphics.boxWidth / 2;\\nthis._boosterSprite.x += Math.randomInt(128) - Math.randomInt(256);\\nthis._boosterSprite.y = Graphics.boxHeight * 1.4;\\nthis._boosterSprite.opacity = 255;\\nthis._boosterSprite.startMove(Graphics.boxWidth / 2, Graphics.boxHeight / 2, 120, 'INOUTBACK');\\n\\n// Create Filter\\nif (!this._bloomFilter) {\\n    this._bloomFilter = new PIXI.filters.AdvancedBloomFilter;\\n    this._bloomFilter.bloomScale = 0;\\n}\\nbaseSprite._filters = [this._bloomFilter];\\n\\n// Play Sound Effect\\nvar delayMs = 500;\\nvar boosterSound = {\\n    name: 'Book2',\\n    volume: 90,\\n    pitch: 50,\\n    pan: 0\\n};\\nvar moveSound = {\\n    name: 'Wind1',\\n    volume: 90,\\n    pitch: 80,\\n    pan: 0\\n};\\nsetTimeout(AudioManager.playSe.bind(AudioManager, boosterSound), delayMs);\\nsetTimeout(AudioManager.playSe.bind(AudioManager, moveSound), delayMs);\\n\\n// Reset Input Cooldown\\nthis._inputCooldown = 60;\\n\\n// Update Booster Pack Count\\nvar contents = this._boosterListWindow.contents;\\ncontents.clear();\\nif (this._totalTimes > 1) {\\n    var lh = Window_Base.prototype.lineHeight.call(this);\\n    var color1 = 'rgba(0, 0, 0, 0.8)';\\n    var color2 = 'rgba(0, 0, 0, 0)';\\n    contents.gradientFillRect(0, 0, contents.width, lh, color1, color2);\\n    var text = this._packCount + '/' + this._totalTimes;\\n    this._boosterListWindow.drawTextEx(text, 40, 0);\\n}\\n\\n// Create Window Countdown Timer\\nthis._windowVisibilityCooldown = 180;\"","BoosterSceneUpdatePhase1:func":"\"// This determines what goes on during phase 1\\n// and the transition from phase 1 to phase 2.\\n\\n// Wait until OK or a mouse button is clicked\\nif (this._inputCooldown <= 0 && !this._phase1pressed && (Input.isPressed('ok') || TouchInput.isPressed())) {\\n    this._phase1pressed = true;\\n    var sound = {\\n        name: 'Ice3',\\n        volume: 90,\\n        pitch: 50,\\n        pan: 0\\n    };\\n    AudioManager.playSe(sound);\\n}\\n\\n// Animation Phase\\nif (this._phase1pressed) {\\n    // Bloom goes up until it reaches 4.0\\n    if (this._bloomFilter.bloomScale < 3) {\\n        this._bloomFilter.bloomScale += 0.075;\\n        this._bloomFilter.bloomScale = Math.min(3, this._bloomFilter.bloomScale);\\n    // Then go to the next phase\\n    } else {\\n        this.gotoNextPhase();\\n    }\\n\\n// Otherwise reduce bloom to 0\\n} else if (this._bloomFilter.bloomScale > 0) {\\n    this._bloomFilter.bloomScale -= 0.025;\\n    this._bloomFilter.bloomScale = Math.max(0, this._bloomFilter.bloomScale);\\n}\\n\\n// Input Cooldown\\nthis._inputCooldown--\\n\\n// Window Opacity\\nif (this._phase1pressed || this._windowVisibilityCooldown-- > 0) {\\n    this._bottomLeftWindow.contentsOpacity -= 16;\\n    this._bottomRightWindow.contentsOpacity -= 16;\\n} else {\\n    this._bottomLeftWindow.contentsOpacity += 16;\\n    this._bottomRightWindow.contentsOpacity += 16;\\n}\\nif (!this._phase1pressed && this._windowVisibilityCooldown <= 150) {\\n    this._boosterListWindow.contentsOpacity += 8;\\n} else {\\n    this._boosterListWindow.contentsOpacity -= 8;\\n}\\n\\n// Skip Input\\nif (this._inputCooldown <= 0 && !this._phase1pressed && (Input.isPressed('cancel') || TouchInput.isCancelled())) {\\n    this._phase1pressed = true;\\n    this.startPhaseSkip();\\n}\"","BoosterSceneStartPhase2:func":"\"// This is the phase where the cards come out of the\\n// Booster Pack and move onto their respective places\\n// on the screen while waiting for the player.\\n\\n// Create a screen flash\\nvar flashColor = [\\n    255, // red\\n    255, // green\\n    255, // blue\\n    255  // intensity\\n];\\nvar duration = 180;\\n$gameScreen.startFlash(flashColor, duration);\\nthis.update();\\n\\n// Reveal the Booster Background Image\\nthis._backgroundParallax.opacity = 255;\\n\\n// Play Sound Effect\\nvar sound = {\\n    name: 'Ice2',\\n    volume: 90,\\n    pitch: 100,\\n    pan: 0\\n};\\nAudioManager.playSe(sound);\\n\\n// Hide the booster sprite\\nthis._boosterSprite.opacity = 0;\\n\\n// Create move locations for cards\\nvar buffer = 72;\\nvar baseSprite = this._spriteset._baseSprite;\\nvar moveLocations = [];\\nfor (var i = 1; i <= this._receivedItems.length; i++) {\\n    if (i > this._receivedItems.length / 2) {\\n        var j = i - Math.floor(this._receivedItems.length / 2);\\n        var x = Graphics.boxWidth * j / Math.ceil((this._receivedItems.length / 2) + 1);\\n        var y = Graphics.boxHeight * 1 / 4 + buffer/16;\\n    }  else {\\n        var x = Graphics.boxWidth * i / Math.floor((this._receivedItems.length / 2) + 1);\\n        var y = Graphics.boxHeight * 3 / 4 - buffer/16;\\n    }\\n    moveLocations.push([x, y]);\\n}\\n\\n// Create new card sprites\\nthis._receivedCards = [];\\nvar moveDuration = 180;\\nvar moveType = 'INOUTBACK';\\nvar targetScale = ((Graphics.boxHeight - buffer) / 460) / 2;\\nvar targetScale2 = ((Graphics.boxWidth - buffer) / 320) / (Math.ceil(this._receivedItems.length / 2) + 1);\\ntargetScale = Math.min(targetScale, targetScale2);\\nvar ms = 1000 / 60;\\nvar delay = 0;\\nfor (var i = 0; i < this._receivedItems.length; i++) {\\n    var item = this._receivedItems[i];\\n    var card = CardManager.createCard(item.id);\\n    card.sprite()._backShowing = true;\\n    card.sprite()._auraVisible = Imported.Irina_CardGameCore.RarityAuras;\\n    this._receivedCards.push(card);\\n    var x = moveLocations[i][0];\\n    var y = moveLocations[i][1];\\n    setTimeout(card.sprite().startMove.bind(card.sprite(), x, y, moveDuration, moveType), delay);\\n    setTimeout(card.sprite().changeScale.bind(card.sprite(), targetScale, moveDuration), delay);\\n    var delay2 = delay + Math.ceil(ms * moveDuration) - 500;\\n    setTimeout(card.sprite().flip.bind(card.sprite(), 20, false), delay2);\\n    moveDuration += 10;\\n}\\n// Create Phase Information\\nthis._phase2pressed = false;\\n\\n// Reset Input Cooldown\\nthis._inputCooldown = 60;\\n\\n// Create Countdown Timer\\nthis._windowVisibilityCooldown = moveDuration + 60;\"","BoosterSceneUpdatePhase2:func":"\"// This determines what goes on during phase 2\\n// and the transition from phase 2 to phase 3.\\n\\n// Wait until OK or a mouse button is clicked\\nif (this._inputCooldown <= 0 && !this._phase2pressed && (Input.isPressed('ok') || TouchInput.isPressed())) {\\n    this._phase2pressed = true;\\n    var delay = 0;\\n    var sound = {\\n        name: 'Wind7',\\n        volume: 120,\\n        pitch: 100,\\n        pan: 0\\n    }\\n    var ms = 1000 / 60;\\n    for (var i = 0; i < this._receivedCards.length; i++) {\\n        var card = this._receivedCards[i];\\n        var x = Graphics.boxWidth * 1.2 + Math.randomInt(100);\\n        var y = card.sprite().y + Math.randomInt(100) - Math.randomInt(200);\\n        var duration = 120;\\n        var moveType = 'INOUTBACK';\\n        setTimeout(card.sprite().flip.bind(card.sprite(), 20, false), Math.max(0, delay - 200));\\n        setTimeout(card.sprite().startMove.bind(card.sprite(), x, y, duration, moveType), delay);\\n        setTimeout(this.disposeCardSprite.bind(this, card), duration * ms + 100);\\n        //setTimeout(AudioManager.playSe.bind(AudioManager, sound), delay + 100);\\n        delay += 100;\\n    }\\n    this.gotoNextPhase();\\n}\\n\\n// Reduce Bloom from before\\nif (this._bloomFilter.bloomScale > 0) {\\n    this._bloomFilter.bloomScale -= 0.025;\\n    this._bloomFilter.bloomScale = Math.max(0, this._bloomFilter.bloomScale);\\n}\\n\\n// Input Cooldown\\nthis._inputCooldown--\\n\\n// Window Opacity\\nif (this._phase2pressed || this._windowVisibilityCooldown-- > 0) {\\n    this._bottomLeftWindow.contentsOpacity -= 16;\\n    this._bottomRightWindow.contentsOpacity -= 16;\\n} else {\\n    this._bottomLeftWindow.contentsOpacity += 16;\\n    this._bottomRightWindow.contentsOpacity += 16;\\n}\\nthis._boosterListWindow.contentsOpacity -= 16;\\n\\n// Skip Input\\nif (this._inputCooldown <= 0 && !this._phase2pressed && (Input.isPressed('cancel') || TouchInput.isCancelled())) {\\n    this._phase2pressed = true;\\n    this.startPhaseSkip();\\n}\"","BoosterSceneStartPhase3:func":"\"// This is the phase where the game checks if there\\n// are more booster packs left to be opened. If there\\n// are, then the phases reset back to 1. Otherwise,\\n// it goes onto the end phase which displays a list of\\n// all the cards the player received this session.\\n\\n// Reset Phases if there's more boosters left\\nif (this._times > 0) return this.resetPhases();\\n\\n// Otherwise open up a list of all the cards obtained this session\\nvar delay = 1000 / 60 * (this._fromSkip ? 30 : 120);\\nthis._active = false;\\nsetTimeout(this.openCardBoosterWindow.bind(this, this._allItems, this._totalTimes), delay);\\n\\n// Create Countdown Timer\\nthis._windowVisibilityCooldown = Infinity;\"","BoosterSceneUpdatePhase3:func":"\"// This determines what goes on during phase 3\\n// and the transition from phase 3 to finish.\\n\\n// Bring bloom level to 0\\nif (this._bloomFilter.bloomScale > 0) {\\n    this._bloomFilter.bloomScale -= 0.025;\\n    this._bloomFilter.bloomScale = Math.max(0, this._bloomFilter.bloomScale);\\n}\\n\\n// Input Cooldown\\nthis._inputCooldown--\\n\\n// Window Opacity\\nthis._bottomLeftWindow.contentsOpacity -= 16;\\nthis._bottomRightWindow.contentsOpacity -= 16;\\nthis._boosterListWindow.contentsOpacity -= 16;\"","BoosterSceneUpdatePhaseSkip:func":"\"// This is the transition that occurs while\\n// skipping forward to phase 3\\n\\n// Window Opacity\\nthis._bottomLeftWindow.contentsOpacity -= 16;\\nthis._bottomRightWindow.contentsOpacity -= 16;\\nthis._boosterListWindow.contentsOpacity -= 16;\"","BoosterSceneUpdatePhaseFinish:func":"\"// This is the transition towards leaving\\n// the booster scene\\n\\n// Fade out the background parallax background\\nthis._backgroundParallax.opacity -= 255 / 60;\\n\\n// Window Opacity\\nthis._bottomLeftWindow.contentsOpacity -= 16;\\nthis._bottomRightWindow.contentsOpacity -= 16;\\nthis._boosterListWindow.contentsOpacity -= 16;\"","AnimateOption":"------------------------------------","AnimateCardOptionShow:eval":"false","AnimateCardOptionDefault:eval":"false","AnimateCardOptionText:str":"Animate Cards","BoosterOption":"------------------------------------","BoosterOptionShow:eval":"false","BoosterOptionDefault:eval":"true","BoosterOptionText:str":"Booster Animation"}},
{"name":"Irina_CardGameDeck","status":true,"description":"<CardGameDeckBuilder> for RMVMV 1.6.2. Place below Irina_CardGameCore.","parameters":{"":"","DeckRulesets:ArrayStruct":"[\"{\\\"Name:str\\\":\\\"通常规则\\\",\\\"UnlockSwitch:num\\\":\\\"0\\\",\\\"Description:json\\\":\\\"\\\\\\\"一套完整的卡组由30张卡牌组成\\\\\\\\n单张卡牌不得超过3张\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_Standard\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"30\\\",\\\"MaxDeckSize:num\\\":\\\"30\\\",\\\"MaxCopies:num\\\":\\\"3\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Quick\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"Deck size must be at least 20 cards large.\\\\\\\\nNo more than x2 copies of a card can be present.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_Quick\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"20\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"2\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Highlander\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"Deck size must be at least 10 cards large.\\\\\\\\nNo more than a single copy of a card can be present.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_Highlander\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"10\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"1\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Unlimited\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"Deck size must be at least 10 cards large.\\\\\\\\nAny number of copies of a card can be used.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_Unlimited\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"10\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"0\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Commons\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"\\\\\\\\\\\\\\\\c[17]Commons only!\\\\\\\\\\\\\\\\c[0] Deck size must be at least 40 cards large.\\\\\\\\nNo more than x4 copies of a card can be present.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_CommonsOnly\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"40\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"4\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"// Check Item rarity\\\\\\\\nitem = arguments[0];\\\\\\\\nif (item.note.match(/<Card Rarity: (\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    var rarity = Number(RegExp.$1);\\\\\\\\n    return rarity <= 0;\\\\\\\\n}\\\\\\\\nreturn true;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Rares\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"\\\\\\\\\\\\\\\\c[17]Rares only!\\\\\\\\\\\\\\\\c[0] Deck size must be at least 20 cards large.\\\\\\\\nNo more than x4 copies of a card can be present.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_RaresOnly\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"20\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"4\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"// Check Item rarity\\\\\\\\nitem = arguments[0];\\\\\\\\nif (item.note.match(/<Card Rarity: (\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    var rarity = Number(RegExp.$1);\\\\\\\\n    return rarity === 1;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"SuperRares\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"\\\\\\\\\\\\\\\\c[17]Super Rares only!\\\\\\\\\\\\\\\\c[0] Deck size must be at least 20 cards large.\\\\\\\\nNo more than x4 copies of a card can be present.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_SuperRaresOnly\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"20\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"4\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"// Check Item rarity\\\\\\\\nitem = arguments[0];\\\\\\\\nif (item.note.match(/<Card Rarity: (\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    var rarity = Number(RegExp.$1);\\\\\\\\n    return rarity === 2;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"UltraRares\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"\\\\\\\\\\\\\\\\c[17]Ultra Rares only!\\\\\\\\\\\\\\\\c[0] Deck size must be at least 20 cards large.\\\\\\\\nNo more than x4 copies of a card can be present.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_UltraRaresOnly\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"20\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"4\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"// Check Item rarity\\\\\\\\nitem = arguments[0];\\\\\\\\nif (item.note.match(/<Card Rarity: (\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    var rarity = Number(RegExp.$1);\\\\\\\\n    return rarity === 3;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"SecretRares\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"\\\\\\\\\\\\\\\\c[17]Secret Rares only!\\\\\\\\\\\\\\\\c[0] Deck size must be at least 20 cards large.\\\\\\\\nNo more than x4 copies of a card can be present.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_SecretRaresOnly\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"20\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"4\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"// Check Item rarity\\\\\\\\nitem = arguments[0];\\\\\\\\nif (item.note.match(/<Card Rarity: (\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    var rarity = Number(RegExp.$1);\\\\\\\\n    return rarity === 4;\\\\\\\\n}\\\\\\\\nreturn false;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Limited\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"Deck size must be at least 40 cards large.\\\\\\\\nMax copies: x1 Secret Rares. x4 Other.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_Limited\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"40\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"4\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"// No more than 1 copy per secret rare.\\\\\\\\nvar item = arguments[0];\\\\\\\\nvar count = arguments[1];\\\\\\\\nif (item.note.match(/<Card Rarity: (\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    var rarity = Number(RegExp.$1);\\\\\\\\n    if (rarity === 4) {\\\\\\\\n        return count < 1;\\\\\\\\n    }\\\\\\\\n}\\\\\\\\nreturn true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Restricted\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"Deck size must be at least 40 cards large.\\\\\\\\nMax copies: x1 Secret Rares. x2 Ultra Rares. x4 Other.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_Restricted\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"40\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"4\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"// No more than 1 copy per secret rare.\\\\\\\\nvar item = arguments[0];\\\\\\\\nvar count = arguments[1];\\\\\\\\nif (item.note.match(/<Card Rarity: (\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    var rarity = Number(RegExp.$1);\\\\\\\\n    if (rarity === 4) {\\\\\\\\n        return count < 1;\\\\\\\\n    } else if (rarity === 3) {\\\\\\\\n        return count < 2;\\\\\\\\n    }\\\\\\\\n}\\\\\\\\nreturn true;\\\\\\\"\\\"}\",\"{\\\"Name:str\\\":\\\"Binding\\\",\\\"UnlockSwitch:num\\\":\\\"1\\\",\\\"Description:json\\\":\\\"\\\\\\\"Deck size must be at least 40 cards large.\\\\\\\\nMax copies: x1 Secret Rares. x2 Ultra Rares. x3 Super Rares. x4 Other.\\\\\\\"\\\",\\\"RulesetImg:str\\\":\\\"DeckRuleset_Binding\\\",\\\"\\\":\\\"\\\",\\\"MinDeckSize:num\\\":\\\"40\\\",\\\"MaxDeckSize:num\\\":\\\"0\\\",\\\"MaxCopies:num\\\":\\\"4\\\",\\\"FilterRules:func\\\":\\\"\\\\\\\"return true;\\\\\\\"\\\",\\\"RestrictionRules:func\\\":\\\"\\\\\\\"// No more than 1 copy per secret rare.\\\\\\\\nvar item = arguments[0];\\\\\\\\nvar count = arguments[1];\\\\\\\\nif (item.note.match(/<Card Rarity: (\\\\\\\\\\\\\\\\d+)>/i)) {\\\\\\\\n    var rarity = Number(RegExp.$1);\\\\\\\\n    if (rarity === 4) {\\\\\\\\n        return count < 1;\\\\\\\\n    } else if (rarity === 3) {\\\\\\\\n        return count < 2;\\\\\\\\n    } else if (rarity === 2) {\\\\\\\\n        return count < 3;\\\\\\\\n    }\\\\\\\\n}\\\\\\\\nreturn true;\\\\\\\"\\\"}\"]","MainMenu":"------------------------------------","ShowMenuDeckBuilderCommand:eval":"true","EnableMenuDeckBuilderCommand:eval":"true","DeckBuilderMenuText:str":"卡组编辑","DeckBuilderScene":"------------------------------------","DeckBuilderIcons":"","LevelIcon:num":"127","PowerIcon:num":"97","HealthIcon:num":"84","ParallaxBGImg:str":"DeckBuilder","ParallaxScrollX:num":"0.5","ParallaxScrollY:num":"0.0","TransparentWindows:eval":"true","SelectRuleSet":"------------------------------------","SelectRulesetText:str":"\\{\\{选择 \\c[17]卡组\\c[0] 规则","SelectRulesetCol:num":"4","MaxScaleNotSelect:num":"0.75","MaxScaleSelect:num":"1","OpacityNotSelect:num":"128","OpacitySelect:num":"255","RulesetWindowInitialize:func":"\"var helpWindow = arguments[0];\\nvar x = 0;\\nvar y = helpWindow.y + helpWindow.height;\\nthis._windowWidth = Graphics.boxWidth;\\nthis._windowHeight = Graphics.boxHeight - helpWindow.height;\\nWindow_HorzCommand.prototype.initialize.call(this, x, y);\"","SelectDeck":"------------------------------------","PreviewWindow":"","NewDeckBoxImg:str":"Deckbox_New","SpriteWindowInitialize:func":"\"var helpWindow = arguments[0];\\nvar width = Math.floor(Graphics.boxWidth * 1 / 3);\\nvar height = Graphics.boxHeight - helpWindow.height;\\nvar x = 0;\\nvar y = helpWindow.y + helpWindow.height;\\nthis._deck = null;\\nthis._card = null;\\nWindow_Base.prototype.initialize.call(this, x, y, width, height);\"","SpriteWindowRefresh:func":"\"// Draw Deck Name\\nvar text = this._deck.name;\\nthis.contents.fontSize += 6;\\nthis.drawText(text, 0, 0, this.contents.width, 'center');\"","DeckListWindow":"","CreateNewDeckText:str":"\\i[87]创建新卡组","CreateNewDeckHelp:json":"\"创建一个全新的卡组\"","SelectDeckHelpFmt:json":"\"在 %1 规则下创建的卡组\\n使用: %2. 获胜: %3. 失利: %4. 平局: %5.\"","ListWindowInitialize:func":"\"var helpWindow = arguments[0];\\nthis._windowWidth = Math.ceil(Graphics.boxWidth * 1 / 3);\\nthis._windowHeight = Graphics.boxHeight - helpWindow.height;\\nvar x = this._windowWidth;\\nvar y = helpWindow.y + helpWindow.height;\\nWindow_Command.prototype.initialize.call(this, x, y);\"","RatioWindow":"","RatioGaugeImg:str":"RatioGauge","RatioWindowInitialize:func":"\"var helpWindow = arguments[0];\\nvar width = Math.floor(Graphics.boxWidth * 1 / 3);\\nvar height = this.fittingHeight(3);\\nvar x = Math.ceil(Graphics.boxWidth * 2 / 3);\\nvar y = helpWindow.y + helpWindow.height;\\nWindow_Base.prototype.initialize.call(this, x, y, width, height);\"","RatioWindowSprite:func":"\"this._RatioGaugeSprite.anchor.x = 0.5;\\nthis._RatioGaugeSprite.anchor.y = 0.5;\\nthis._RatioGaugeSprite.x = this.width / 2;\\nthis._RatioGaugeSprite.y = this.height / 2;\"","RatioWindowDrawGauges:func":"\"// Get Bitmap Information\\nvar pw = this._RatioGaugeBitmap.width;\\nvar ph = this._RatioGaugeBitmap.height;\\nvar x = (this.contents.width - pw) / 2;\\nvar y = 0;\\n\\n// Calculate Template Data\\nvar types = {};\\nvar templates = Imported.Irina_CardGameCore.Templates;\\nfor (var i = 0; i < templates.length; i++) {\\n    var template = templates[i];\\n    types[template.Name.toUpperCase()] = 0;\\n}\\nvar max = 1;\\nfor (var i = 0; i < this._deck.cards.length; i++) {\\n    var item = $dataItems[this._deck.cards[i]];\\n    if (!item) continue;\\n    if (item.note.match(/<Card Element: (.*)>/i)) {\\n        var key = String(RegExp.$1).trim().toUpperCase();\\n    } else {\\n        var key = 'NONE';\\n    }\\n    if (types[key] !== undefined) {\\n        types[key] += 1;\\n        max = Math.max(max, types[key]);\\n    }\\n}\\n\\n// Draw Ratios\\nvar color1 = ['#464646','#9e0b0f','#0076a3','#a0410d','#197b30','#aba000','#440e62'];\\nvar color2 = ['#959595','#f69679','#6dcff6','#f9ad81','#82ca9c','#fff799','#bd8cbf'];\\nx += 8;\\ny += 3;\\nvar width = 8;\\nvar height = 78;\\nfor (var i = 0; i < templates.length; i++) {\\n    var template = templates[i];\\n    var count = types[template.Name.toUpperCase()];\\n    var rate = Math.min(1, count / max);\\n    var fillH = Math.floor(height * rate);\\n    this.contents.gradientFillRect(x, y + height - fillH, width, fillH, color1[i], color2[i]);\\n    x += 24;\\n}\"","RatioWindowDrawAverages:func":"\"// Draw Deck Statistics\\nvar level = 0;\\nvar power = 0;\\nvar health = 0;\\nfor (var i = 0; i < this._deck.cards.length; i++) {\\n    var item = $dataItems[this._deck.cards[i]];\\n    if (item && item.note.match(/<Card Level: (.*)>/i)) {\\n        level += Number(RegExp.$1) || 0;\\n    }\\n    if (item && item.note.match(/<Card Power: (.*)>/i)) {\\n        power += Number(RegExp.$1) || 0;\\n    }\\n    if (item && item.note.match(/<Card Health: (.*)>/i)) {\\n        health += Number(RegExp.$1) || 0;\\n    } else {\\n        health += 1;\\n    }\\n}\\nvar total = this._deck.cards.length || 1;\\nlevel = Math.round(level / total);\\npower = Math.round(power / total);\\nhealth = Math.round(health / total);\\nthis.resetFontSettings();\\nvar drawHealth = $showCardHealth;\\nvar x = 0;\\nvar y = this.lineHeight() * 0.5;\\nvar bx = (this.contents.width + this._RatioGaugeBitmap.width) / 2;\\nvar bw = this.contents.width - bx;\\nthis.drawText('平均', x, y, bw, 'center');\\nvar iconsWidth = Window_Base._iconWidth * ($showCardHealth ? 3 : 2);\\nx = (bw - iconsWidth) / 2;\\ny += this.lineHeight();\\n// Start Drawing Statistics\\nthis.contents.fontSize = 20;\\nthis.contents.outlineColor = 'rgba(0, 0, 0, 1)';\\nthis.drawIcon(Imported.Irina_CardGameDeck.LevelIcon, x, y);\\nthis.drawText(level, x, y, Window_Base._iconWidth, 'center');\\nx += Window_Base._iconWidth;\\nthis.drawIcon(Imported.Irina_CardGameDeck.PowerIcon, x, y);\\nthis.drawText(power, x, y, Window_Base._iconWidth, 'center');\\nx += Window_Base._iconWidth;\\nif (!$showCardHealth) return;\\nthis.drawIcon(Imported.Irina_CardGameDeck.HealthIcon, x, y);\\nthis.drawText(health, x, y, Window_Base._iconWidth, 'center');\"","RatioWindowDrawCount:func":"\"// Draw Card Count\\nvar bx = (this.contents.width + this._RatioGaugeBitmap.width) / 2;\\nvar y = this.lineHeight() * 0.5;\\nvar bw = this.contents.width - bx;\\nvar deckSize = this._deck.cards.length;\\nvar minSize = Math.max(1, this._ruleset.MinDeckSize);\\nvar maxSize = this._ruleset.MaxDeckSize;\\nif (maxSize <= 0) maxSize = Infinity;\\nif (deckSize > maxSize || deckSize < minSize) {\\n    var text = '\\\\\\\\c[10]';\\n} else if (deckSize <= maxSize && deckSize > minSize) {\\n    var text = '\\\\\\\\c[17]';\\n} else {\\n    var text = '\\\\\\\\c[0]';\\n}\\ntext += deckSize + '\\\\\\\\c[0]/' + minSize;\\nvar x = bx + ((bw - Window_ChoiceList.prototype.textWidthEx.call(this, text)) / 2);\\nthis.drawTextEx(text, x, y);\\ny += this.lineHeight();\\ntext = '\\\\\\\\c[0]卡牌';\\nvar x = bx + ((bw - Window_ChoiceList.prototype.textWidthEx.call(this, text)) / 2);\\nthis.drawTextEx(text, x, y);\"","ContentsWindow":"","ContentsWindowIntialize:func":"\"var helpWindow = arguments[0];\\nvar ratioWindow = arguments[1];\\nvar x = ratioWindow.x;\\nvar y = ratioWindow.y + ratioWindow.height;\\nvar width = ratioWindow.width;\\nvar height = Graphics.boxHeight - y;\\nWindow_ItemList.prototype.initialize.call(this, x, y, width, height);\"","CommandWindow":"------------------------------------","CommandWindowOpacity:num":"255","CommandWindowWidth:num":"240","CTXTeditDeck:str":"卡组编辑","CHLPeditDeck:json":"\"调整当前选择卡组\"","CSHOWeditDeck:eval":"true","CTXTrenameDeck:str":"重命名","CHLPrenameDeck:json":"\"为当前卡组重新命名\"","CSHOWrenameDeck:eval":"true","DeckNameLength:num":"24","CTXTfavorite:str":"设为常用","CTXTunfavorite:str":"取消常用","CHLPfavorite:json":"\"把当前卡组设为/取消常用卡组\"","CSHOWfavorite:eval":"true","DeckIconFavorite:num":"84","DeckIconNormal:num":"187","CTXTchangeBox:str":"Change Box","CHLPchangeBox:json":"\"Change the deck box used for the currently selected deck.\"","CSHOWchangeBox:eval":"false","DefaultDeckboxes:arraystr":"[\"Deckbox_Black\",\"Deckbox_Red\",\"Deckbox_Orange\",\"Deckbox_Yellow\",\"Deckbox_Green\",\"Deckbox_Blue\",\"Deckbox_Purple\",\"Deckbox_White\"]","DeckBoxRows:num":"3","DeckBoxCol:num":"3","CTXTchangeSleeves:str":"Change Sleeves","CHLPchangeSleeves:json":"\"Change the sleeves used for the currently selected deck.\"","CSHOWchangeSleeves:eval":"false","DeckSleevesRows:num":"3","DeckSleevesCol:num":"3","CTXTorderDeck:str":"Order Deck","CHLPorderDeck:json":"\"Change the order of the currently selected deck in the deck list.\"","CSHOWorderDeck:eval":"false","OrderTextCodeColor:num":"17","CTXTdeleteDeck:str":"删除卡组","CHLPdeleteDeck:json":"\"将当前卡组删除\"","CSHOWdeleteDeck:eval":"true","DeleteDeckText:str":"你确定要删除这一卡组吗？","DeleteDeckYesText:str":"是","DeleteDeckNoText:str":"否","DeckBuilding":"------------------------------------","FilterSortWindow":"","FilterAllIcon:num":"320","NameAZIcon:num":"321","NameZAIcon:num":"322","LevelAscIcon:num":"323","LevelDesIcon:num":"324","PowerAscIcon:num":"325","PowerDesIcon:num":"326","HealthAscIcon:num":"327","HealthDesIcon:num":"328","ResetIcon:num":"329","FinishIcon:num":"90","FilterSortWindowInitialize:func":"\"var helpWindow = arguments[0];\\nvar contentsWindow = arguments[1];\\nthis._windowWidth = Graphics.boxWidth - contentsWindow.width;\\nthis._windowHeight = this.fittingHeight(1);\\nvar x = 0;\\nvar y = helpWindow.y + helpWindow.height;\\nWindow_HorzCommand.prototype.initialize.call(this, x, y);\"","InventoryWindow":"","InventoryWindowCols:num":"5","InventoryWindowRows:num":"2","InventoryPreviewCardFadeTimer:num":"30","InventoryWindowInitialize:func":"\"var helpWindow = arguments[0];\\nvar contentsWindow = arguments[1];\\nvar filterWindow = arguments[2];\\nthis._fadeInTimer = this.fadeTimer();\\nvar x = 0;\\nvar y = filterWindow.y + filterWindow.height;\\nvar width = Graphics.boxWidth - contentsWindow.width;\\nvar height = Graphics.boxHeight - y;\\nWindow_ItemList.prototype.initialize.call(this, x, y, width, height);\"","InventoryWindowDrawCell:func":"\"var item = arguments[0];\\nvar index = arguments[1];\\n\\nvar rect = this.itemRect(index);\\nthis.resetFontSettings();\\nvar bottomY = rect.y + rect.height - this.lineHeight();\\nvar filter = this._filterWindow.cardFilter();\\n\\n// Change Font Settings\\nthis.resetFontSettings();\\nthis.contents.fontSize = 20;\\nthis.contents.outlineColor = 'rgba(0, 0, 0, 1)';\\n\\n// Draw Level (if Sort By)\\nif (filter.level !== false) {\\n    var icon = 127;\\n    this.drawIcon(icon, rect.x + this.textPadding(), bottomY);\\n    var text = 0;\\n    if (item.note.match(/<Card Level: (.*)>/i)) text = Number(RegExp.$1) || 0;\\n    this.drawText(text, rect.x + this.textPadding(), bottomY, Window_Base._iconWidth, 'center');\\n}\\n\\n// Draw Power (if Sort By)\\nif (filter.power !== false) {\\n    var icon = 97;\\n    this.drawIcon(icon, rect.x + this.textPadding(), bottomY);\\n    var text = 0;\\n    if (item.note.match(/<Card Power: (.*)>/i)) text = Number(RegExp.$1) || 0;\\n    this.drawText(text, rect.x + this.textPadding(), bottomY, Window_Base._iconWidth, 'center');\\n}\\n\\n// Draw Health (if Sort By)\\nif (filter.health !== false) {\\n    var icon = 84;\\n    this.drawIcon(icon, rect.x + this.textPadding(), bottomY);\\n    var text = 0;\\n    if (item.note.match(/<Card Health: (.*)>/i)) text = Number(RegExp.$1) || 0;\\n    this.drawText(text, rect.x + this.textPadding(), bottomY, Window_Base._iconWidth, 'center');\\n}\\n\\n// Draw Item Number\\nvar denominator = $gameParty.numItems(item);\\nif (Imported.YEP_CoreEngine) denominator = Yanfly.Util.toGroup(denominator);\\nvar text = '/' + denominator;\\nrect.width -= this.textPadding();\\nthis.drawText(text, rect.x, bottomY, rect.width, 'right');\\nrect.width -= this.textWidth(text);\\nSceneManager._scene.currentDeck().cards = SceneManager._scene.currentDeck().cards || [];\\nvar count = SceneManager._scene.currentDeck().cards.filter(function(x){return x===item.id}).length;\\nif (count > denominator) {\\n    this.changeTextColor(this.textColor(10));\\n} else if (count > 0) {\\n    this.changeTextColor(this.textColor(17));\\n} else {\\n    this.changeTextColor(this.normalColor());\\n}\\nif (Imported.YEP_CoreEngine) count = Yanfly.Util.toGroup(count);\\nthis.drawText(count, rect.x, bottomY, rect.width, 'right');\\nrect.width -= this.textWidth(count);\\nthis.changeTextColor(this.normalColor());\\nthis.drawText('\\\\u00d7', rect.x, bottomY, rect.width, 'right');\""}},
{"name":"Irina_CardGameMech","status":true,"description":"<CardGameMechanics> for RMVMV 1.6.2. Place below Irina_CardGameCore and Irina_CardGameMechanics.","parameters":{"":"","Mechanics":"------------------------------------","MergeOnBoot:eval":"true","TurnTrackerVariable:num":"901","PhaseTrackerVariable:num":"902","SelectDeckWindow":"------------------------------------","SelectDeckWindowMsg:str":"选择要使用的卡组","SelectDeckWindowWidth:str":"Math.ceil(Graphics.boxWidth * 2 / 5)","SelectDeckWindowRows:str":"8","CardGameBoard":"------------------------------------","BackgroundImg:str":"CardGameHUD","Fluctuation":"","FlucDifMod:num":"50","FlucDifMax:num":"5","SetupBoard:func":"\"// Window Settings\\nthis.opacity = 0;\\nthis.contentsOpacity = 0;\\nthis._faceOpacitySpeed = 16;\\nthis._contentsOpacitySpeed = 16;\\n\\n// Create Player Face\\nthis._playerFaceSprite = this.createFaceSprite($cardPlayer());\\nthis._playerFaceSprite.x = Graphics.boxWidth - Window_Base._faceWidth - 24;\\nthis._playerFaceSprite.y = Graphics.boxHeight / 2 + this.lineHeight() / 2;\\nthis._playerFaceSprite.opacity = 0;\\n\\n// Create Player Shield\\nthis.createShield(this._playerFaceSprite, $cardPlayer());\\nthis._playerFaceSprite._shieldSprite.x = this._playerFaceSprite._shieldSprite._baseX = this._playerFaceSprite.x;\\nthis._playerFaceSprite._shieldSprite.y = this._playerFaceSprite._shieldSprite._baseY = this._playerFaceSprite.y + Window_Base._faceHeight * 1/4;\\nthis._playerFaceSprite._shieldSprite.opacity = 0;\\n\\n// Create Player Heart Meter\\nthis.createHeartMeter(this._playerFaceSprite, $cardPlayer());\\nthis._playerFaceSprite._heartSprite.x = this._playerFaceSprite._heartSprite._baseX = this._playerFaceSprite.x;\\nthis._playerFaceSprite._heartSprite.y = this._playerFaceSprite._heartSprite._baseY = this._playerFaceSprite.y + Window_Base._faceHeight * 3/4;\\nthis._playerFaceSprite._heartSprite.opacity = 0;\\n\\n// Create Opponent Face\\nthis._opponentFaceSprite = this.createFaceSprite($cardOpponent());\\nthis._opponentFaceSprite.x = Graphics.boxWidth - Window_Base._faceWidth - 24;\\nthis._opponentFaceSprite.y = Graphics.boxHeight / 2 - Window_Base._faceHeight - this.lineHeight() / 2;\\nthis._opponentFaceSprite.opacity = 0;\\n\\n// Create Player Shield\\nthis.createShield(this._opponentFaceSprite, $cardOpponent());\\nthis._opponentFaceSprite._shieldSprite.x = this._opponentFaceSprite._shieldSprite._baseX = this._opponentFaceSprite.x;\\nthis._opponentFaceSprite._shieldSprite.y = this._opponentFaceSprite._shieldSprite._baseY = this._opponentFaceSprite.y + Window_Base._faceHeight * 1/4;\\nthis._opponentFaceSprite._shieldSprite.opacity = 0;\\n\\n// Create Opponent Heart Meter\\nthis.createHeartMeter(this._opponentFaceSprite, $cardOpponent());\\nthis._opponentFaceSprite._heartSprite.x = this._opponentFaceSprite._heartSprite._baseX = this._opponentFaceSprite.x;\\nthis._opponentFaceSprite._heartSprite.y = this._opponentFaceSprite._heartSprite._baseY = this._opponentFaceSprite.y + Window_Base._faceHeight * 3/4;\\nthis._opponentFaceSprite._heartSprite.opacity = 0;\"","CreateFaceSprite:func":"\"// Declare variables\\nvar owner = arguments[0];\\nvar actor = owner.actor;\\n\\n// Create Face Sprite Base\\nvar sprite = new Sprite_Base();\\nthis._spriteContainer.addChild(sprite);\\nsprite._owner = owner;\\n\\n// Create Outline Filter\\nvar thickness = Imported.Irina_CardGameCore.CardOutlineThickness;\\nvar color = Imported.Irina_CardGameCore.CardOutlineColor;\\nsprite._filters = [new PIXI.filters.OutlineFilter(thickness, color)];\\n\\n// Create Face Mask\\nsprite._maskSprite = new Sprite();\\nsprite.addChild(sprite._maskSprite);\\nsprite._maskSprite.bitmap = new Bitmap(Window_Base._faceWidth, Window_Base._faceHeight);\\nsprite._maskSprite.bitmap.drawCircle(Window_Base._faceWidth/2, Window_Base._faceHeight/2, Window_Base._faceWidth/2, 'white');\\nsprite._maskSprite._mask = sprite._maskSprite;\\n\\n// Create Background\\nsprite._bgSprite = new Sprite();\\nsprite.addChild(sprite._bgSprite);\\nsprite._bgSprite.bitmap = new Bitmap(Window_Base._faceWidth, Window_Base._faceHeight);\\nsprite._bgSprite.bitmap.drawCircle(Window_Base._faceWidth/2, Window_Base._faceHeight/2, Window_Base._faceWidth/2, 'black');\\nsprite._maskSprite._mask = sprite._maskSprite;\\n\\n// Create Face Sprite\\nsprite._face = new Sprite();\\nsprite.addChild(sprite._face);\\nsprite._face.bitmap = ImageManager.loadFace(actor.faceName());\\nvar index = actor.faceIndex();\\nvar pw = Window_Base._faceWidth;\\nvar ph = Window_Base._faceHeight;\\nvar sx = index % 4 * pw;\\nvar sy = Math.floor(index / 4) * ph;\\nsprite._face.setFrame(sx, sy, pw, ph);\\nsprite._face._mask = sprite._maskSprite;\\n\\n// Create Animation Target\\nsprite._animationTarget = new Sprite_Base();\\nsprite.addChild(sprite._animationTarget);\\nsprite._animationTarget.x = Window_Base._faceWidth/2;\\nsprite._animationTarget.y = Window_Base._faceHeight/2;\\n\\n// Return the sprite\\nreturn sprite;\"","CreateHealthMeter:func":"\"// Declare variables\\nvar ownerSprite = arguments[0];\\nvar owner = arguments[1];\\n\\n// Create Back Heart\\nvar sprite = new Sprite();\\nthis._spriteContainer.addChild(sprite);\\nsprite.bitmap = ImageManager.loadPicture('CardGameHeartMeter');\\nvar frameHeight = 72;\\nvar frameWidth = 72;\\nsprite.setFrame(0, 0, frameWidth, frameHeight);\\nsprite.anchor.x = 0.5;\\nsprite.anchor.y = 0.5;\\n\\n// Create Front Heart\\nsprite._front = new Sprite();\\nsprite.addChild(sprite._front);\\nsprite._front.bitmap = ImageManager.loadPicture('CardGameHeartMeter');\\nsprite._front.setFrame(frameWidth, 0, frameWidth, frameHeight);\\nsprite._front.anchor.x = 0.5;\\nsprite._front.anchor.y = 1;\\nsprite._front.y = frameHeight / 2;\\n\\n// Create Draw Layer\\nsprite._drawLayer = new Sprite();\\nsprite.addChild(sprite._drawLayer);\\nsprite._drawLayer.bitmap = new Bitmap(frameWidth, frameHeight);\\nsprite._drawLayer.bitmap.fontSize = 32;\\nsprite._drawLayer.bitmap.outlineColor = 'rgba(0, 0, 0, 1)';\\nsprite._drawLayer.anchor.x = 0.5;\\nsprite._drawLayer.anchor.y = 0.5;\\n\\n// Set Owner (Not a part of the plugin params)\\nsprite._owner = owner;\\nownerSprite._heartSprite = sprite;\"","CreateShieldCounter:func":"\"// Declare variables\\nvar ownerSprite = arguments[0];\\nvar owner = arguments[1];\\n\\n// Create Back Heart\\nvar sprite = new Sprite();\\nthis._spriteContainer.addChild(sprite);\\nsprite.bitmap = ImageManager.loadPicture('CardGameShield');\\nsprite.anchor.x = 0.5;\\nsprite.anchor.y = 0.5;\\nvar frameHeight = 72;\\nvar frameWidth = 72;\\n\\n// Create Draw Layer\\nsprite._drawLayer = new Sprite();\\nsprite.addChild(sprite._drawLayer);\\nsprite._drawLayer.bitmap = new Bitmap(frameWidth, frameHeight);\\nsprite._drawLayer.bitmap.fontSize = 32;\\nsprite._drawLayer.bitmap.outlineColor = 'rgba(0, 0, 0, 1)';\\nsprite._drawLayer.anchor.x = 0.5;\\nsprite._drawLayer.anchor.y = 0.5;\\n\\n// Set Owner (Not a part of the plugin params)\\nsprite._owner = owner;\\nownerSprite._shieldSprite = sprite;\"","BoardRefresh:func":"\"// Reset Font Settings\\nthis.resetFontSettings();\\n\\n// Stops drawing the UI if phase variable value is 6 or above.\\n// BE SURE TO CHANGE THIS VARIABLE if you are using something\\n// else for phase tracking.\\nif ($gameVariables.value(Imported.Irina_CardGameMechanics.PhaseTrackerVariable) > 5) return;\\n\\n// Loop through all the players and opponents.\\nvar owners = [$cardPlayer()].concat($scene().getCardGameOpponents());\\nfor (var i = 0; i < owners.length; i++) {\\n    var owner = owners[i];\\n\\n    // Draw Owner Library Count\\n    var count = owner.library.length;\\n    if (count > 0) {\\n        this.contents.fontSize = 32;\\n        this.contents.outlineColor = 'rgba(0, 0, 0, 1)';\\n        var text = 'x' + count;\\n        var x = owner._libraryLocation.x - Window_Base._faceWidth/2 + this.lineHeight()/2;\\n        var y = owner._libraryLocation.y + this.lineHeight()/2;\\n        var width = Window_Base._faceWidth;\\n        this.drawText(text, x, y, width, 'right');\\n    }\\n\\n    // Draw Player Discard Count\\n    var count = owner.discard.length;\\n    if (count > 0) {\\n        this.contents.fontSize = 32;\\n        this.contents.outlineColor = 'rgba(0, 0, 0, 1)';\\n        var text = 'x' + count;\\n        var x = owner._discardLocation.x - Window_Base._faceWidth/2 - this.lineHeight()/2;\\n        var y = owner._discardLocation.y + this.lineHeight()/2;\\n        var width = Window_Base._faceWidth;\\n        this.drawText(text, x, y, width, 'left');\\n    }\\n\\n    // Draw Player Exhaust Count\\n    var count = owner.exhaust.length;\\n    if (count > 0) {\\n        this.contents.fontSize = 32;\\n        this.contents.outlineColor = 'rgba(0, 0, 0, 1)';\\n        var text = 'x' + count;\\n        var x = owner._exhaustLocation.x - Window_Base._faceWidth/2 - this.lineHeight()/2;\\n        var y = owner._exhaustLocation.y + this.lineHeight()/2;\\n        var width = Window_Base._faceWidth;\\n        this.drawText(text, x, y, width, 'left');\\n    }\\n}\\n\\n// Draw Data Gradient\\n// BE SURE TO CHANGE THIS VARIABLE if you are using something\\n// else for turn tracking.\\nif ($gameVariables.value(Imported.Irina_CardGameMechanics.TurnTrackerVariable) <= 0) return;\\nvar x = 0;\\nvar y = this.contents.height / 2 - this.lineHeight();\\nvar width = Math.floor(this.contents.width / 10);\\nvar height = this.lineHeight() * 2;\\nthis.contents.fillRect(x, y, width, height, this.dimColor1());\\nx += width;\\nthis.contents.gradientFillRect(x, y, width, height, this.dimColor1(), this.dimColor2());\\n\\n// Draw Turn Count\\nthis.resetFontSettings();\\nthis.contents.fontSize = 32;\\nthis.contents.outlineColor = 'rgba(0, 0, 0, 1)';\\nvar text = '第' + $gameVariables.value(Imported.Irina_CardGameMechanics.TurnTrackerVariable) + '回合';\\nthis.drawText(text, 18, y + this.lineHeight() * 0, width*2);\\n\\n// Draw Phases\\nthis.contents.fontSize = 28;\\nvar i = $gameVariables.value(Imported.Irina_CardGameMechanics.PhaseTrackerVariable);\\nswitch (i) {\\ncase 1:\\n    var text = '● 准备阶段';\\n    break;\\ncase 2:\\n    var text = '● 抽卡';\\n    break;\\ncase 3:\\n    var text = '● 主要阶段';\\n    break;\\ncase 4:\\n    var text = '● 战斗';\\n    break;\\ncase 5:\\n    var text = '● 结束阶段';\\n    break;\\n}\\nthis.drawText(text, 18, y + this.lineHeight() * 1, width*2);\"","BoardUpdate:func":"\"// Fade In Contents Opacity\\nthis.contentsOpacity += this._contentsOpacitySpeed;\\n\\n// Set Sprites\\nvar faceSprites = [this._playerFaceSprite, this._opponentFaceSprite];\\n\\n// Update Face Sprite Opacity\\nfor (var i = 0; i < faceSprites.length; i++) {\\n    var sprite = faceSprites[i];\\n    if (sprite) {\\n        sprite.opacity += this._faceOpacitySpeed;\\n        if (sprite._heartSprite) {\\n            sprite._heartSprite.opacity += this._faceOpacitySpeed;\\n            this.updateHeartMeter(sprite);\\n        }\\n        if (sprite._shieldSprite) {\\n            this.updateShield(sprite);\\n        }\\n        this.updateBattleAnimation(sprite);\\n    }\\n}\"","UpdateHealth:func":"\"// Declare Variables\\nvar ownerSprite = arguments[0];\\nvar owner = ownerSprite._owner;\\nvar frameWidth = 72;\\nvar frameHeight = 72;\\n\\n// Set Base\\nif (ownerSprite.currentHealth !== owner.currentHealth) {\\n    if (ownerSprite.currentHealth === undefined) ownerSprite.currentHealth = owner.currentHealth;\\n    var difference = Math.abs(ownerSprite.currentHealth - owner.currentHealth)\\n    if (ownerSprite.currentHealth > owner.currentHealth) {\\n        ownerSprite.currentHealth -= Math.max(0.25, difference / this.differenceRate());\\n        if (ownerSprite.currentHealth < owner.currentHealth) ownerSprite.currentHealth = owner.currentHealth;\\n    } else {\\n        ownerSprite.currentHealth += Math.max(1, difference / this.differenceRate());\\n        if (ownerSprite.currentHealth > owner.currentHealth) ownerSprite.currentHealth = owner.currentHealth;\\n    }\\n\\n    // Draw New Number\\n    var bitmap = ownerSprite._heartSprite._drawLayer.bitmap;\\n    bitmap.clear();\\n    bitmap.drawText(Math.round(ownerSprite.currentHealth), 0, 0, bitmap.width, bitmap.height, 'center');\\n\\n    // Resize frame\\n    var rate = 1 - (owner.currentHealth / owner.startHealth).clamp(0, 1);\\n    var size = Math.round(frameHeight * rate);\\n    if (ownerSprite._heartSprite._currentSize === undefined) ownerSprite._heartSprite._currentSize = 0;\\n    ownerSprite._heartSprite._targetSize = size;\\n}\\n\\n// Set Heart Location\\nownerSprite._heartSprite.x = ownerSprite._heartSprite._baseX;\\nownerSprite._heartSprite.y = ownerSprite._heartSprite._baseY;\\n\\n// Draw Heart Container Fill Percentage\\nif (ownerSprite._heartSprite._currentSize !== ownerSprite._heartSprite._targetSize) {\\n    if (ownerSprite._heartSprite._currentSize > ownerSprite._heartSprite._targetSize) {\\n        ownerSprite._heartSprite._currentSize -= 0.25;\\n        if (ownerSprite._heartSprite._currentSize < ownerSprite._heartSprite._targetSize) ownerSprite._heartSprite._currentSize = ownerSprite._heartSprite._targetSize;\\n    } else {\\n        var difference = Math.abs(ownerSprite._heartSprite._currentSize - ownerSprite._heartSprite._targetSize);\\n        ownerSprite._heartSprite._currentSize += Math.max(0.25, difference / 30);\\n        if (ownerSprite._heartSprite._currentSize > ownerSprite._heartSprite._targetSize) ownerSprite._heartSprite._currentSize = ownerSprite._heartSprite._targetSize;\\n        var fluctuate = Math.min(this.maxFluctuation(), Math.round(difference));\\n        ownerSprite._heartSprite.x += Math.randomInt(fluctuate) - Math.randomInt(fluctuate * 2);\\n        ownerSprite._heartSprite.y += Math.randomInt(fluctuate) - Math.randomInt(fluctuate * 2);\\n    }\\n    var size = Math.round(ownerSprite._heartSprite._currentSize);\\n    ownerSprite._heartSprite._front.setFrame(frameWidth, size, frameWidth, frameHeight - size);\\n}\"","UpdateShield:func":"\"// Declare Variables\\nvar ownerSprite = arguments[0];\\nvar owner = ownerSprite._owner;\\nvar frameWidth = 72;\\nvar frameHeight = 72;\\n\\n// Set Base\\nownerSprite.shield = ownerSprite.shield || 0;\\n\\n// Set Location\\nownerSprite._shieldSprite.x = ownerSprite._shieldSprite._baseX;\\nownerSprite._shieldSprite.y = ownerSprite._shieldSprite._baseY;\\n\\n// Draw Shield Number\\nif (ownerSprite.shield !== owner.shield) {\\n    var difference = Math.abs(ownerSprite.shield - owner.shield)\\n    if (ownerSprite.shield > owner.shield) {\\n        ownerSprite.shield -= Math.max(0.25, difference / this.differenceRate());\\n        if (ownerSprite.shield < owner.shield) ownerSprite.shield = owner.shield;\\n        var fluctuate = Math.min(this.maxFluctuation(), Math.round(difference));\\n        ownerSprite._shieldSprite.x += Math.randomInt(fluctuate) - Math.randomInt(fluctuate * 2);\\n        ownerSprite._shieldSprite.y += Math.randomInt(fluctuate) - Math.randomInt(fluctuate * 2);\\n    } else {\\n        ownerSprite.shield += Math.max(1, difference / this.differenceRate());\\n        if (ownerSprite.shield > owner.shield) ownerSprite.shield = owner.shield;\\n    }\\n    // Draw New Number\\n    var bitmap = ownerSprite._shieldSprite._drawLayer.bitmap;\\n    bitmap.clear();\\n    bitmap.drawText(Math.round(ownerSprite.shield), 0, 0, bitmap.width, bitmap.height, 'center');\\n}\\n\\n// Fade In/Out the Shield\\nif (this._faceOpacitySpeed > 0) {\\n    ownerSprite._shieldSprite.opacity += ((ownerSprite.shield > 0) ? 1 : -1) * this._faceOpacitySpeed;\\n} else {\\n    ownerSprite._shieldSprite.opacity += this._faceOpacitySpeed;\\n}\"","HandWindows":"------------------------------------","HandWindowCardWidth:num":"320","SkipTurnCard:num":"1201","AlwaysShowSkip:eval":"false","ListWindow":"------------------------------------","ListWindowCardScale:num":"0.4","ListWindowDrawText:func":"\"// Set Coordinates\\nvar x = 0;\\nvar y = this.contents.height / 9;\\n\\n// Reset Font Settings\\nthis.resetFontSettings();\\n\\n// Change Font Size\\nthis.contents.fontSize = 32;\\n\\n// Draw Text\\nthis.drawText(this._text, x, y, this.contents.width, 'center');\"","SpriteSettings":"------------------------------------","ReadySingleCardCode:func":"\"var sprite = arguments[0];\\nsprite.transform.skew.x = -0.50;\\nsprite.transform.skew.y = 0.25;\\nsprite.rotation = 0.5;\\nsprite._backShowing = true;\\nsprite._baseScale = 0.25;\"","SortSkipCards:func":"\"// Declare Variables;\\nvar owner = arguments[0];\\nvar sprite = owner.skipCard.sprite();\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Check if card owner is the player\\nif (owner === $cardPlayer()) {\\n    var x = owner._libraryLocation.x;\\n    sprite.changeSkew(-0.50, 0.25, duration, easing);\\n    sprite.changeRotation(0.5, duration, easing);\\n    \\n// If not the player\\n} else {\\n    var x = Graphics.boxWidth / 2;\\n    sprite.changeSkew(0, 0, duration, easing);\\n    sprite.changeRotation(0, duration, easing);\\n}\\n\\n// Adjust Sprite\\nvar y = owner._libraryLocation.y - owner.library.length;\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(0, duration);\\nsprite.changeScale(0.25, duration, easing);\\nsprite.flip(duration, false, false);\"","SortSpotlightCard:func":"\"var owner = arguments[0];\\nvar sprite = arguments[1];\\nvar duration = 20;\\nvar easing = 'OUTSINE';\\n\\n// Adjust Sprites\\nsprite.startMove(Graphics.boxWidth / 2, Graphics.boxHeight / 2, duration, easing);\\nsprite.changeOpacity(255, duration);\\nsprite.changeScale(1.20, duration, easing);\\nsprite.changeSkew(0, 0, duration, easing);\\nsprite.changeRotation(0, duration, easing);\\n\\nsprite._flipDuration = 0;\\nsprite._flipTotalDuration = 0;\\nsprite._backShowing = false;\\n$spotlightCard._isRevealed = true;\"","SortLibrary:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = owner._libraryLocation.x;\\nvar index = owner.library.indexOf(sprite._card);\\nvar y = owner._libraryLocation.y - index;\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(255, duration);\\nsprite.changeScale(0.25, duration, easing);\\nsprite.changeSkew(-0.50, 0.25, duration, easing);\\nsprite.changeRotation(0.5, duration, easing);\\nsprite.flip(duration, !sprite._card.isRevealed());\"","SortDiscard:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = owner._discardLocation.x;\\nvar index = owner.discard.indexOf(sprite._card);\\nvar y = owner._discardLocation.y - index;\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(255, duration);\\nsprite.changeScale(0.25, duration, easing);\\nsprite.changeSkew(0.50, -0.25, duration, easing);\\nsprite.changeRotation(-0.5, duration, easing);\\nsprite.flip(duration, false);\"","SortExhaust:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = owner._exhaustLocation.x;\\nvar index = owner.exhaust.indexOf(sprite._card);\\nvar y = owner._exhaustLocation.y - owner.exhaust.length;\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(128, duration);\\nsprite.changeScale(0.25, duration, easing);\\nsprite.changeSkew(0.50, -0.25, duration, easing);\\nsprite.changeRotation(-0.5, duration, easing);\\nsprite.flip(duration, false);\"","SortHand:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar i = arguments[2];\\nvar handWindow = arguments[3];\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar rect = handWindow.itemRect(i);\\nvar x = handWindow.x + rect.x + rect.width/2;\\nvar y = handWindow.y + rect.y + rect.height/2;\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(255, duration);\\nsprite.changeScale(handWindow._cardScale, duration, easing);\\nsprite.changeSkew(0, 0, duration, easing);\\nsprite.changeRotation(0, duration, easing);\"","SelectedHand:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar handWindow = arguments[2];\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar rect = handWindow.itemRect(handWindow.index());\\nvar x = handWindow.x + rect.x + rect.width/2;\\nvar cwh = sprite.width / 2;\\nx = x.clamp(cwh, Graphics.boxWidth - cwh);\\nvar y = handWindow.y + rect.y + rect.height/2;\\nvar chh = sprite.height / 2;\\ny = y.clamp(chh, Graphics.boxHeight - chh);\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, 10, 'OUTSINE');\\nsprite.changeScale(1.0, 10, 'OUTSINE');\"","SortList:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar i = arguments[2];\\nvar listWindow = arguments[3];\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\nvar cardWidth = Imported.Irina_CardGameMechanics.HandWindowCardWidth/2 * (1-listWindow._cardScale);\\n\\n// Calculate Locations\\nvar rect = listWindow.itemRect(i);\\nvar x = listWindow.x + rect.x + rect.width/2;\\nvar y = listWindow.y + rect.y + rect.height/2;\\n\\n// Check Index Position\\nif (i < listWindow.index()) {\\n    var d = listWindow.index()-i;\\n    x -= cardWidth;\\n    sprite.changeRotation(-0.5, duration, easing);\\n} else if (i > listWindow.index()) {\\n    var d = i-listWindow.index();\\n    x += cardWidth;\\n    sprite.changeRotation(0.5, duration, easing);\\n} else {\\n    sprite.changeRotation(0, duration, easing);\\n}\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(255, duration);\\nsprite.changeSkew(0, 0, duration, easing);\\nsprite.changeScale(listWindow._cardScale, duration, easing);\"","SelectedList:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar listWindow = arguments[2];\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Locations\\nvar rect = listWindow.itemRect(listWindow.index());\\nvar x = listWindow.x + rect.x + rect.width/2;\\nvar cwh = sprite.width / 2;\\nx = x.clamp(cwh, Graphics.boxWidth - cwh);\\nvar y = listWindow.y + rect.y + rect.height/2;\\nvar chh = sprite.height / 2;\\ny = y.clamp(chh, Graphics.boxHeight - chh);\\n\\n// Adjust Sprite\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeSkew(0, 0, duration, easing);\\nsprite.changeRotation(0, duration, easing);\\nsprite.changeScale(1.0, duration, easing);\"","CustomPiles":"------------------------------------","CustomPileA:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileB:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileC:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileD:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileE:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileF:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileG:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileH:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileI:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileJ:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileK:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileL:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileM:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileN:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileO:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileP:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileQ:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileR:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileS:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileT:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileU:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileV:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileW:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileX:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileY:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\"","CustomPileZ:func":"\"// Declare Variables\\nvar owner = arguments[0];\\nvar sprite = arguments[1];\\nvar card = sprite._card;\\nvar duration = 10;\\nvar easing = 'OUTSINE';\\n\\n// Calculate Location\\nvar x = Graphics.boxWidth / 2;\\nvar y = Graphics.boxHeight / 2;\\n\\n// Other Traits\\nvar opacity = 255;   // Number between 0-255\\nvar scale = 0.50;    // Use a decimal number\\nvar skewX = 0.00;    // Use a decimal number\\nvar skewY = 0.00;    // Use a decimal number\\nvar rotation = 0.00; // Use a decimal number\\nvar flip = !card.isRevealed(); // true/false value\\n\\n// Adjust Sprites\\nsprite.startMove(x, y, duration, easing);\\nsprite.changeOpacity(opacity, duration);\\nsprite.changeScale(scale, duration, easing);\\nsprite.changeSkew(skewX, skewY, duration, easing);\\nsprite.changeRotation(rotation, duration, easing);\\nsprite.flip(duration, flip);\""}},
{"name":"--------------------","status":false,"description":"","parameters":{}},
{"name":"KELYEP_DragonBones","status":false,"description":"v1.07 DragonBones Integration with YEP library compatibility!\nUse DragonBones assets with your battlers!","parameters":{"---General---":"","Assets Path":"./dragonbones_assets/","Support UpperCase Animation Names":"true","Debug Console Text":"false","---Preload---":"","Preload Assets":"[]","Auto-Preload Battlers":"true","---Defaults---":"","Replace Battler Sprite":"true","Default ScaleX":"0.5","Default ScaleY":"0.5","Default Width":"100","Default Height":"100"}}
];
